"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAppPaths = getAppPaths;
exports.getAppsToInit = getAppsToInit;
exports.isMonorepo = isMonorepo;
exports.locateAppToRunCmd = locateAppToRunCmd;
var _path = require("path");
var _fs = require("fs");
var _prompts = _interopRequireDefault(require("prompts"));
var _globby = _interopRequireDefault(require("globby"));
var _EdgioPackageJson = _interopRequireDefault(require("./EdgioPackageJson"));
var _logo = _interopRequireDefault(require("./logo"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function isMonorepo() {
  const lerna = (0, _fs.existsSync)((0, _path.join)(process.cwd(), 'lerna.json')) && require((0, _path.join)(process.cwd(), 'lerna.json'));
  const workspaces = _EdgioPackageJson.default.loadPackageJson(process.cwd()).workspaces;
  return workspaces && workspaces.length > 0 || lerna && lerna.packages && lerna.packages.length > 0;
}
async function getAppsToInit() {
  const appPaths = await getAppPaths({
    absolute: true
  });
  const {
    apps
  } = await (0, _prompts.default)([{
    type: 'multiselect',
    message: `Please select the apps that you would like to initialize for ${_logo.default}`,
    name: 'apps',
    choices: appPaths.map(path => ({
      value: path.path,
      title: path.name
    })),
    hint: 'Press space to select, return to continue.',
    instructions: false,
    min: 1
  }]);
  return apps;
}
async function locateAppToRunCmd(action) {
  const appPaths = (await getAppPaths()).filter(({
    path
  }) => (0, _fs.existsSync)(`${path}/edgio.config.js`) || (0, _fs.existsSync)(`${path}/edgio.config.cjs`));
  if (appPaths.length === 1) {
    // `globby` is using objectMode: https://github.com/mrmlnc/fast-glob#objectmode
    process.chdir(appPaths[0].path);
  } else if (appPaths.length > 1) {
    const {
      app
    } = await (0, _prompts.default)([{
      type: 'select',
      message: `Select app to ${action}`,
      name: 'app',
      choices: appPaths.map(path => ({
        value: path.path,
        title: path.name
      })),
      instructions: false
    }]);
    app && process.chdir(app);
  }
}
async function getAppPaths(options) {
  let packages;
  if ((0, _fs.existsSync)((0, _path.join)(process.cwd(), 'lerna.json'))) {
    packages = require((0, _path.join)(process.cwd(), 'lerna.json')).packages;
  }

  // `lerna.json` may be present in the project, but packages/workspaces may still be defined in `package.json`.
  if (!packages) {
    packages = require((0, _path.join)(process.cwd(), 'package.json')).workspaces;
  }
  if (packages && packages.length) {
    return await (0, _globby.default)(packages, _objectSpread({
      onlyDirectories: true,
      expandDirectories: false,
      deep: 1,
      objectMode: true
    }, options));
  } else {
    return [];
  }
}