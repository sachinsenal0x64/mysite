/**
 * The id of the origin from which we serve static assets associated with a single deployment
 */
export declare const STATIC_ORIGIN_NAME = "edgio_static";
/**
 * The id of the origin from which we serve static assets with globally unique filenames (usually based on a hash of the file content)
 * for all deployments.
 */
export declare const PERMANENT_STATIC_ORIGIN_NAME = "edgio_permanent_static";
/**
 * The id of the origin from which serverless functions are served.
 */
export declare const SERVERLESS_ORIGIN_NAME = "edgio_serverless";
/**
 * The id of the origin from which we serve our image optimizer locally.
 * When app is deployed to Edgio, the SERVERLESS origin is used instead.
 */
export declare const IMAGE_OPTIMIZER_ORIGIN_NAME = "edgio_image_optimizer";
/**
 * The id of the origin with pre-built @edgio/prefetch assets
 */
export declare const PREFETCH_ORIGIN_NAME = "edgio_prefetch";
export declare function getEdgioOrigins(forEdgeControl?: boolean): any[];
export declare function getPathPrefix(origin: string): any;
/**
 *  * Creates the origin group for serving static assets associated with a single deployment.
 * @returns
 */
export declare function createStaticOrigin(): any;
/**
 * Creates the origin group for serving static assets with globally unique URLs across all deployments.
 * @returns
 */
export declare function createPermanentStaticOrigin(): any;
/**
 * Creates the origin group for serverless functions.
 * When forEdgeControl is false, the serverless origin target is the app. (In simulator and on permalink)
 * When forEdgeControl is true, the serverless origin target is link to permalink.
 * This ensure that the app is not infinitely sending requests to itself.
 * @returns
 */
export declare function createServerlessOrigin(forEdgeControl?: boolean): any;
/**
 * Creates the origin for the image optimizer.
 * This origin is used when we run the app locally in production mode.
 * When app is deployed to Edgio, the SERVERLESS origin is used instead.
 * @returns
 */
export declare function createImageOptimizerOrigin(): any;
/**
 * Creates the origin config for the prefetch origin with pre-built @edgio/prefetch assets.
 * This origin is used just for local simulation.
 * @returns
 */
export declare function createPrefetchOrigin(): {
    name: string;
    override_host_header: string;
    hosts: {
        location: string;
    }[];
};
