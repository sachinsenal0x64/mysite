"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Evaluator = void 0;
/**
 * Evaluator represents certain action
 * which is defined by string expression
 *
 * For example: "%{valueName/seachPattern/replaceValue}" => "content of the value with replaceValue"
 */
class Evaluator {
    /**
     * @param action Action which is performed when input matches the regex matcher
     * @param matcher Regex condition which input expression must satisfy
     * @param normalizeKey Function which normalizes both first matched group in the expression and the key in the values object to same format
     */
    constructor(action, matcher, normalizeKey = key => key) {
        this.normalizeKey = key => key;
        this.action = action;
        this.matcher = matcher;
        this.normalizeKey = normalizeKey;
    }
    /**
     * Evaluates the provided string expression and perform provided action
     * when it satisfies evaluator's matcher format
     *
     * @param input expression
     * @param values object with extracted values from the request
     * @returns string on success and undefined in other cases
     */
    execute(input, values) {
        const result = this.matcher.exec(input);
        if (!result)
            return undefined;
        // Normalize all keys in the values object to same format
        const normalizedValues = Object.fromEntries(Object.entries(values).map(([key, value]) => [this.normalizeKey(key), value]));
        const [_, valueName, ...others] = result.values();
        return this.action({
            values: normalizedValues,
            matched: [
                // Normalize the matched key to same format as the values object
                this.normalizeKey(valueName),
                ...others,
            ],
        });
    }
}
exports.Evaluator = Evaluator;
