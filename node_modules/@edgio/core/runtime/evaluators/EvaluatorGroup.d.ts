import type { IEvaluator } from './Evaluator';
/**
 * Represent group of Evaluators
 * and allow to perform bulk execution of them on certain condition provided as matcher
 */
export declare class EvaluatorGroup implements IEvaluator {
    protected evaluators: IEvaluator[];
    protected matcher: RegExp;
    /**
     * @param evaluators initial list of Evaluators or another EvaluatorGroups
     * @param matcher regex condition which input expression must satisfy
     */
    constructor(evaluators?: IEvaluator[], matcher?: RegExp);
    /**
     * Executes all Evaluators in the group
     * and return the result of first one which returns the string (OR equivalent)
     * if the expression satisfies EvaluatorGroup's matcher
     * @param input expression
     * @param values object with extracted values from the request
     * @returns string on success and undefined in other cases
     */
    execute(input: string, values: Record<string, string>): string | undefined;
    /**
     * Adds the Evaluator or another EvaluatorGroup to the group
     */
    add(evaluator: IEvaluator): void;
}
