/// <reference types="node" />
import EdgeFunctionWorkerParams from './EdgeFunctionWorkerParams';
import EdgeFunctionHeaders from './EdgeFunctionHeaders';
import { Origins } from '../../types';
import { WasmError } from './WasmProgram';
export default class EdgeFunctionRequest {
    method: string;
    url: string;
    path: string;
    rawBody?: Buffer;
    protocol?: string;
    httpVersion?: string;
    headers: EdgeFunctionHeaders;
    /**
     * A Request becomes immutable after fetch is called
     */
    fetchCalled: boolean;
    fetchOrigin: Origins | undefined;
    fetchTimeout: number;
    static createFromEdgeFunctionParams(params: EdgeFunctionWorkerParams): EdgeFunctionRequest;
    static createFromMethodAndUrl(method: string, url: string): EdgeFunctionRequest;
    static createFromRequest(request: EdgeFunctionRequest): EdgeFunctionRequest;
    /**
     * Creates a new EdgeFunctionRequest out of any object that fulfils basic interface of a generalized Request.
     */
    constructor(method: string, url: string);
    appendHeader(name: string, value: unknown): void;
    getHeader(name: string): string | string[] | undefined;
    getHeaderNameByIdx(idx: number): string;
    getHeaders(): {
        [name: string]: string | string[];
    };
    setHeader(name: string, value: unknown): void;
    removeHeader(name: string): boolean;
    readBodyChunk(chunkOffset: number, maxChunkSize: number): Buffer | undefined;
    static validate_uri(uri: string): WasmError;
}
