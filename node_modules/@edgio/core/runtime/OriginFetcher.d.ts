import PropertyContext from './PropertyContext';
import Request from '../runtime/Request';
import Response from '../runtime/Response';
import { BackendFetchOptions } from './Backend';
/**
 * Options for single fetch request performed by the OriginFetcher.
 * @private
 */
export interface FetchOptions extends BackendFetchOptions {
    /**
     * When set to true, the OriginFetcher will refetch the whole asset if out of range
     * @default false
     */
    ignoreUnsatisfiableRanges?: boolean;
}
/**
 * Helper class for fetching from origins
 * which allows to follow redirects to different origin.
 *
 * All redirect locations need to be configured in the edgio.config.js with exact hostname in
 * hostnames section otherwise the default origin will be used.
 *
 */
export default class OriginFetcher {
    private propertyContext;
    constructor(propertyContext: PropertyContext);
    /**
     * Fetches a response from the origin and follows redirects based on provided options.
     * @param req The request
     * @param res The response
     * @param options Additional options for this single fetch request
     * @param providedOriginName The origin name to be used. If not provided, the origin name will be extracted from the request.
     */
    fetch(req: Request, res: Response, options?: FetchOptions, providedOriginName?: string): Promise<void>;
    /**
     * Removes sensitive headers from the request.
     * @param req
     */
    removeSensitiveHeaders(req: Request): void;
}
