"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setPath = exports.setURL = exports.parseURL = void 0;
const qs_1 = require("qs");
/**
 * Cleans and returns parsed URL.
 * @param url can be absolute or relative
 * @example parseURL('/path//something?query=string') => { url: '/path/something?query=string', path: '/path/something', query: { query: 'string' } }
 * @example parseURL('https://example.com/path//something?query=string') => { url: 'https://example.com/path/something?query=string', path: '/path/something', query: { query: 'string' } }
 */
function parseURL(url) {
    // we need to parse the URL manually, because the URL constructor doesn't preserve the original format
    const [rest, query] = url.split('?');
    const splitByProtocol = rest.split('://');
    const protocol = splitByProtocol.length >= 2 ? `${splitByProtocol.shift()}://` : '';
    const path = splitByProtocol.pop() || '';
    // remove double slashes from path, as for unknown reasons, the URL constructor doesn't do that
    const sanitizedURL = `${protocol}${path.replace(/(\/\/+)/gm, '/')}${query ? `?${query}` : ''}`;
    const parsed = new URL(sanitizedURL, 'http://host');
    return {
        url: sanitizedURL,
        path: parsed.pathname,
        query: (0, qs_1.parse)(parsed.search.replace('?', '')),
    };
}
exports.parseURL = parseURL;
function setURL(req, url) {
    Object.assign(req, parseURL(url));
}
exports.setURL = setURL;
function setPath(req, newPath) {
    const [_path, query] = req.url.split('?');
    req.path = newPath;
    req.url = `${newPath}${query && query.length ? `?${query}` : ''}`;
}
exports.setPath = setPath;
