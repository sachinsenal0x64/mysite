"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Mod_1 = __importDefault(require("./Mod"));
const EarlyReturn_1 = __importDefault(require("../EarlyReturn"));
const http_1 = require("http");
/**
 * Emulation of Sailfish's mod_access
 */
class ModAccess extends Mod_1.default {
    async execute(phase) {
        this.context.forEachMatchingRule(rule => this.applyFeatures(rule, phase));
    }
    applyFeatures(features, _phase) {
        var _a;
        if ((_a = features.access) === null || _a === void 0 ? void 0 : _a.deny_access) {
            const response = this.context.getResponse();
            response.statusCode = 403;
            response.statusMessage = http_1.STATUS_CODES[403];
            throw new EarlyReturn_1.default('deny_access');
        }
    }
    toString() {
        return 'ModAccess';
    }
}
exports.default = ModAccess;
