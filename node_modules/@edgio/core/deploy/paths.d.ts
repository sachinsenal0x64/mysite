import Config from '../config';
/**
 * The .edgio build directory
 */
export declare const EDGIO_DIR = ".edgio";
/**
 * The destination directory with entrypoint for lambda function.
 * This directory contains two directories: internal and app.
 */
export declare const LAMBDA_DIR: string;
/**
 * The name of destination directory for our internal JS files such as
 * handler, backends, router etc...
 */
export declare const JS_INTERNAL_DIR_NAME = "internal";
/**
 * The relative path to destination directory for our internal JS files such as
 * handler, backends, router etc...
 */
export declare const JS_INTERNAL_DIR: string;
/**
 * The name of destination directory for user's file with JS code
 * with server and its dependencies
 */
export declare const JS_APP_DIR_NAME = "app";
/**
 * The relative path to destination directory for user's file with JS code
 * with server and its dependencies
 */
export declare const JS_APP_DIR: string;
/**
 * The name of the bundled edge functions index file
 */
export declare const EDGE_FUNCTIONS_INDEX_FILENAME = "__edge-functions-index__.js";
/**
 * The name of the file containing edge function source code
 */
export declare const EDGE_FUNCTION_SOURCES_FILENAME = "__edge-function-sources__.json";
/**
 * The name of the bundled edge functions file
 */
export declare const EDGE_FUNCTIONS_BUNDLE_FILENAME = "edge-function.js";
/**
 * The path of the bundled edge functions file
 */
export declare const EDGE_FUNCTIONS_BUNDLE_PATH: string;
/**
 * The path to the edge functions index file
 */
export declare const EDGE_FUNCTIONS_INDEX_PATH: string;
/**
 * The name of the bundled edge functions index compiled QuickJS bytecode file
 */
export declare const EDGE_FUNCTIONS_QUICKJS_BYTECODE_FILENAME = "__edge-functions__.qbc";
/**
 * The path to the bundled edge functions index compiled QuickJS bytecode file
 */
export declare const EDGE_FUNCTIONS_QUICKJS_BYTECODE_PATH: string;
/**
 * The destination directory for static assets
 */
export declare const ASSETS_DIR: string;
export declare const PERMANENT_ASSETS_DIR: string;
/**
 * The directory into which source code is copied for debugging purposes
 */
export declare const SOURCES_DIR: string;
/**
 * The directory for temporary files during the build process.
 * This directory is cleaned after the build process is complete.
 */
export declare const TMP_DIR: string;
/**
 * The name of the compiled routes file
 */
export declare const ROUTES_FILE_NAME = "routes.cjs";
/**
 * The name of the compiled edgio config file
 */
export declare const CONFIG_FILE_NAME = "edgio.config.cjs";
/**
 * The static asset manifest file name
 * @private
 */
export declare const STATIC_ASSET_MANIFEST_FILE_NAME = "static-asset-manifest.json";
/**
 * The static asset expiration file name
 * @private
 */
export declare const STATIC_ASSET_EXPIRATION_FILE_NAME = "static-asset-expiration.json";
/**
 * Returns the destination path within the lambda dir for the specified backend
 * @param backend A backend name
 * @return a file path
 */
export declare function pathForBackend(backend: string): string;
/**
 * Returns the path to the routes.js file with the router.
 * @param config The config from edgio.config.js
 * @param cwd The current working directory
 * @returns
 */
export declare function getRouterPath(config?: Config): string;
/**
 * Gets the path to edgio.config.js file
 * @returns
 */
export declare function getConfigPath(): string;
/**
 * Gets the path to static-asset-manifest.json file
 * @returns
 */
export declare function getStaticAssetManifestPath(): string;
/**
 * Returns the correct path to the '.edgio/lambda/app' folder
 * with user's JS code in both dev and prod modes.
 * @param cwd
 * @returns
 */
export declare function getJsAppPath(cwd?: string): string;
/**
 * Returns the path to the '.edgio/lambda/internal' folder
 * with our edgio's JS files such as routes.cjs or edgio.config.cjs.
 * @param cwd
 * @returns
 */
export declare function getJsInternalPath(cwd?: string): string;
