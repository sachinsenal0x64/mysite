/// <reference types="node" />
import { Router } from '../../router';
import { Rules } from '../../types';
type EdgeFunctionSources = {
    [key: string]: string;
};
/**
 * Returns an object whose names are function paths and whose values are the source code for the function.
 * @returns
 */
export declare function getEdgeFunctionSources(): EdgeFunctionSources;
/**
 * Returns the compiled code for the edge function at the specified source path
 * If there are no edge functions or they have not been generated yet, returns undefined.
 * @returns
 */
export declare function getEdgeFunctionBytecode(rules?: Rules[]): Buffer | undefined;
/**
 * Watches for changes to all edge functions referenced by the specified rules and compiles them.
 * @param rules The router rules
 * @param routerSrcPath The path to the routes file relative to the root of the app
 */
export declare function watchEdgeFunctions(router: Router, routerSrcPath: string): Promise<void>;
export {};
