/// <reference types="node" />
import EdgeFunctionsBuilder from './EdgeFunctionsBuilder';
import { Router } from '../../router';
/**
 * The edge functions builder for NodeJS environment.
 * This builder uses esbuild to bundle the index file, so it allows to use imports in edge functions.
 * This builder builds the index file 'edgeFunctionsIndexCodeTemplate' with sdk, edge functions and bundle it.
 * The index file is then compiled to QuickJS bytecode.
 */
export default class EdgeFunctionsNodeBuilder extends EdgeFunctionsBuilder {
    protected baseDir: string;
    /**
     * A map of edge function paths to source code to upload for display in console.
     */
    sources: {
        [key: string]: string;
    };
    /**
     * @param Router The Router
     * @param baseDir The base of the project directory
     */
    constructor(router: Router, baseDir: string);
    /**
     * Returns the code with edge function import as string
     * which can later be inserted into edge functions map.
     * @returns
     */
    protected getFunctionCode(srcPath: string, isInitScript: boolean): string;
    /**
     * Returns the code of prebuilt the index code template from the file system.
     * @returns
     */
    protected getIndexCodeTemplate(): Promise<string>;
    /**
     * Bundles the generated index code into a single file bundle
     * and returns the bundled code
     * @returns
     */
    bundleIndexCode(indexFilePath: string | undefined, writeLocalFile: boolean): Promise<string>;
    /**
     * Builds all edge functions referenced by the specified rules and compiles them.
     * Returns a Buffer with the compiled bytecode for the edge functions index file
     * or undefined if there are no edge functions.
     * @param options Additional options with custom paths
     * @returns
     */
    build(options?: {
        indexFilePath?: string;
        bytecodePath?: string;
    }): Promise<Buffer | undefined>;
    /**
     * Bundles the edge functions index at the specified path into a single file bundle.
     * @param indexPath
     * @returns
     */
    bundle(indexPath: string, writeLocalFile: boolean): Promise<any>;
    /**
     * Converts the edge function into cjs
     * @param code
     * @returns cjs
     */
    convertToCjs(code: string): Promise<string>;
}
