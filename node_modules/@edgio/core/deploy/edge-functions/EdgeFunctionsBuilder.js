"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const edgeFunctionUtils_1 = require("../../utils/edgeFunctionUtils");
const path_1 = require("path");
/**
 * The abstract base class for edge function builders.
 */
class EdgeFunctionsBuilder {
    /**
     * @param router The Router
     */
    constructor(router) {
        this.functionDefaultExportName = 'edgeFunctionsDefaultExport';
        this.indexCodeTemplateFilename = 'edgeFunctionsIndexCodeTemplate.js';
        this.router = {};
        this.router = router;
    }
    /**
     * Returns the array of function entries.
     * Each entry contains the name of the function and the code of function which will return the edge function.
     * @returns FunctionEntry[]
     */
    getFunctionEntries() {
        const features = (0, edgeFunctionUtils_1.getEdgeFunctionFeatures)(this.router.rules);
        // Optionallly inject the edge_function_init_script path into the list
        // of egde functions, but only if there are edge functions in the router rules.
        if (features.length > 0 &&
            this.router.routerOptions &&
            this.router.routerOptions.edge_function_init_script) {
            const srcPath = this.router.routerOptions.edge_function_init_script;
            features.push({
                edge_function: srcPath,
                is_init_script: true, // Tag this as an init script
            });
        }
        // Inject each edge_function defined in the router's rules.
        return features.map(feature => {
            let srcPath = feature.edge_function;
            // If the path does not have an extension, assume it is a .js file.
            srcPath = (0, path_1.basename)(srcPath).indexOf('.') < 0 ? srcPath + '.js' : srcPath;
            const functionCode = this.getFunctionCode(srcPath, feature.is_init_script);
            return {
                name: feature.is_init_script ? '__edge_function_init_script__' : srcPath,
                code: `function() {
          ${functionCode}
          return ${this.functionDefaultExportName}
        }`,
            };
        });
    }
    /**
     * Returns the final index code with the edge functions map inserted.
     * @returns
     */
    async getIndexCode() {
        const functionEntries = this.getFunctionEntries();
        const indexCodeTemplate = await this.getIndexCodeTemplate();
        return indexCodeTemplate.replace(/["'`]__INSERT_EDGE_FUNCTIONS_MAP_HERE__["'`]/, `new Map([${functionEntries.map(entry => `['${entry.name}',${entry.code}]`).join(',\n')}])`);
    }
}
exports.default = EdgeFunctionsBuilder;
