{
  "version": 3,
  "sources": ["../../../src/runtime/edge-functions/sdk/consts.js", "../../../src/runtime/edge-functions/sdk/symbols.js", "../../../src/runtime/edge-functions/bundled-object-inspect.js", "../../../src/runtime/edge-functions/sdk/readable-stream.js", "../../../src/runtime/edge-functions/sdk/edgio-readable-stream-reader.js", "../../../src/runtime/edge-functions/sdk.js", "../../../src/deploy/edge-functions/edgeFunctionsIndexCodeTemplate.js"],
  "sourcesContent": ["// Constants used in sdk.js and its dependencies.\nmodule.exports = {\n  STDOUT_FD: 1,\n  STDERR_FD: 2,\n\n  // Dictionary namespaces used here, in sailfish and EdgeFunction.ts\n  ENV_VAR_NAMESPACE_EDGIO_CONFIG: 'edgio-config',\n  ENV_VAR_NAMESPACE_EDGIO_ORIGINS: 'edgio-origins',\n  ENV_VAR_NAMESPACE_EDGIO_PROPENVVAR: 'edgio-property-environment-variables',\n  ENV_VAR_NAMESPACE_EDGIO_FEATURE_FLAGS: 'edgio-feature-flags',\n  ENV_VAR_NAMESPACE_EDGIO_USRVAR: 'edgio-usrvar',\n  ENV_VAR_NAMESPACE_EDGIO_GEO: 'edgio-geo',\n  ENV_VAR_NAMESPACE_EDGIO_WURFL: 'edgio-wurfl',\n  ENV_VAR_NAMESPACE_EDGIO_VIRT: 'edgio-virt',\n  UTF_8: 'utf-8',\n\n  // Metrics available to sdk.js from sailfish wasm_metrics.h\n  WASM_METRIC_JSON_PARSE_INVOCATION_TOTAL: 1000,\n  WASM_METRIC_JSON_STRINGIFY_INVOCATION_TOTAL: 1001,\n  WASM_METRIC_JSON_PARSE_MICROSECONDS_TOTAL: 1002,\n  WASM_METRIC_JSON_STRINGIFY_MICROSECONDS_TOTAL: 1003,\n  WASM_METRIC_TEXT_ENCODE_INVOCATION_TOTAL: 1004,\n  WASM_METRIC_TEXT_DECODE_INVOCATION_TOTAL: 1005,\n  WASM_METRIC_TEXT_ENCODE_MICROSECONDS_TOTAL: 1006,\n  WASM_METRIC_TEXT_DECODE_MICROSECONDS_TOTAL: 1007,\n\n  INTERNAL_ERROR_PREFIX: 'Internal Error: ',\n}\n", "// We use symbols for all internal properties to improve the performance and avoid\n// accidental access or conflicts from user code, including JSON serialization.\nmodule.exports = {\n  AppendFn: Symbol('append-fn'),\n  Body: Symbol('body'),\n  BodyOnHost: Symbol('body-on-host'),\n  BodyReadOffset: Symbol('body-read-offset'),\n  BodyUsed: Symbol('body-used'),\n  CheckFn: Symbol('check-fn'),\n  Chunks: Symbol('Chunks'),\n  Controller: Symbol('Controller'),\n  Done: Symbol('Done'),\n  EdgioId: Symbol('edgio-id'),\n  Encoding: Symbol('encoding'),\n  ErrorCode: Symbol('error-code'),\n  ErrorState: Symbol('error-state'),\n  GetBodyChunkFn: Symbol('get-body-chunk-fn'),\n  GetFn: Symbol('get-fn'),\n  KeysFn: Symbol('keys-fn'),\n  MoveBodyToHost: Symbol('move-body-to-host'),\n  Namespace: Symbol('namespace'),\n  Options: Symbol('options'),\n  Origins: Symbol('edgio-origins'),\n  PendingNextPromise: Symbol('PendingNextPromise'),\n  PendingNextPromiseReject: Symbol('PendingNextPromiseReject'),\n  PendingNextPromiseResolve: Symbol('PendingNextPromiseResolve'),\n  QueuingStrategy: Symbol('QueuingStrategy'),\n  Redirected: Symbol('redirected'),\n  RemoveFn: Symbol('remove-fn'),\n  ReqOrRespObject: Symbol('req-or-resp-object'),\n  ReqRespHeaders: Symbol('req-resp-headers'),\n  RequestObject: Symbol('request-object'),\n  ResponseObject: Symbol('response-object'),\n  SendToClient: Symbol('send-to-client'),\n  SetFn: Symbol('set-fn'),\n  Stream: Symbol('Stream'),\n  UnderlyingSource: Symbol('UnderlyingSource'),\n  Url: Symbol('url'),\n}\n", "var Et=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var et=Et(()=>{});var U=typeof Map==\"function\"&&Map.prototype,N=Object.getOwnPropertyDescriptor&&U?Object.getOwnPropertyDescriptor(Map.prototype,\"size\"):null,I=U&&N&&typeof N.get==\"function\"?N.get:null,rt=U&&Map.prototype.forEach,K=typeof Set==\"function\"&&Set.prototype,C=Object.getOwnPropertyDescriptor&&K?Object.getOwnPropertyDescriptor(Set.prototype,\"size\"):null,L=K&&C&&typeof C.get==\"function\"?C.get:null,nt=K&&Set.prototype.forEach,$t=typeof WeakMap==\"function\"&&WeakMap.prototype,w=$t?WeakMap.prototype.has:null,Mt=typeof WeakSet==\"function\"&&WeakSet.prototype,E=Mt?WeakSet.prototype.has:null,Wt=typeof WeakRef==\"function\"&&WeakRef.prototype,at=Wt?WeakRef.prototype.deref:null,It=Boolean.prototype.valueOf,Lt=Object.prototype.toString,_t=Function.prototype.toString,Rt=String.prototype.match,Q=String.prototype.slice,s=String.prototype.replace,kt=String.prototype.toUpperCase,it=String.prototype.toLowerCase,gt=RegExp.prototype.test,ot=Array.prototype.concat,u=Array.prototype.join,qt=Array.prototype.slice,ft=Math.floor,z=typeof BigInt==\"function\"?BigInt.prototype.valueOf:null,B=Object.getOwnPropertySymbols,F=typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?Symbol.prototype.toString:null,m=typeof Symbol==\"function\"&&typeof Symbol.iterator==\"object\",o=typeof Symbol==\"function\"&&Symbol.toStringTag&&(typeof Symbol.toStringTag===m?\"object\":\"symbol\")?Symbol.toStringTag:null,vt=Object.prototype.propertyIsEnumerable,lt=(typeof Reflect==\"function\"?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(t){return t.__proto__}:null);function ut(t,e){if(t===1/0||t===-1/0||t!==t||t&&t>-1e3&&t<1e3||gt.call(/e/,e))return e;var n=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if(typeof t==\"number\"){var a=t<0?-ft(-t):ft(t);if(a!==t){var i=String(a),r=Q.call(e,i.length+1);return s.call(i,n,\"$&_\")+\".\"+s.call(s.call(r,/([0-9]{3})/g,\"$&_\"),/_$/,\"\")}}return s.call(e,n,\"$&_\")}var H=et(),ct=H.custom,pt=ht(ct)?ct:null;module.exports=function t(e,n,a,i){var r=n||{};if(y(r,\"quoteStyle\")&&r.quoteStyle!==\"single\"&&r.quoteStyle!==\"double\")throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');if(y(r,\"maxStringLength\")&&(typeof r.maxStringLength==\"number\"?r.maxStringLength<0&&r.maxStringLength!==1/0:r.maxStringLength!==null))throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');var c=y(r,\"customInspect\")?r.customInspect:!0;if(typeof c!=\"boolean\"&&c!==\"symbol\")throw new TypeError(\"option \\\"customInspect\\\", if provided, must be `true`, `false`, or `'symbol'`\");if(y(r,\"indent\")&&r.indent!==null&&r.indent!==\"\t\"&&!(parseInt(r.indent,10)===r.indent&&r.indent>0))throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');if(y(r,\"numericSeparator\")&&typeof r.numericSeparator!=\"boolean\")throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');var v=r.numericSeparator;if(typeof e>\"u\")return\"undefined\";if(e===null)return\"null\";if(typeof e==\"boolean\")return e?\"true\":\"false\";if(typeof e==\"string\")return dt(e,r);if(typeof e==\"number\"){if(e===0)return 1/0/e>0?\"0\":\"-0\";var f=String(e);return v?ut(e,f):f}if(typeof e==\"bigint\"){var p=String(e)+\"n\";return v?ut(e,p):p}var _=typeof r.depth>\"u\"?5:r.depth;if(typeof a>\"u\"&&(a=0),a>=_&&_>0&&typeof e==\"object\")return V(e)?\"[Array]\":\"[Object]\";var S=Yt(r,a);if(typeof i>\"u\")i=[];else if(mt(i,e)>=0)return\"[Circular]\";function l(h,M,wt){if(M&&(i=qt.call(i),i.push(M)),wt){var tt={depth:r.depth};return y(r,\"quoteStyle\")&&(tt.quoteStyle=r.quoteStyle),t(h,tt,a+1,i)}return t(h,r,a+1,i)}if(typeof e==\"function\"&&!yt(e)){var G=Ft(e),X=W(e,l);return\"[Function\"+(G?\": \"+G:\" (anonymous)\")+\"]\"+(X.length>0?\" { \"+u.call(X,\", \")+\" }\":\"\")}if(ht(e)){var Y=m?s.call(String(e),/^(Symbol\\(.*\\))_[^)]*$/,\"$1\"):F.call(e);return typeof e==\"object\"&&!m?O(Y):Y}if(Qt(e)){for(var d=\"<\"+it.call(String(e.nodeName)),R=e.attributes||[],$=0;$<R.length;$++)d+=\" \"+R[$].name+\"=\"+St(At(R[$].value),\"double\",r);return d+=\">\",e.childNodes&&e.childNodes.length&&(d+=\"...\"),d+=\"</\"+it.call(String(e.nodeName))+\">\",d}if(V(e)){if(e.length===0)return\"[]\";var k=W(e,l);return S&&!Xt(k)?\"[\"+J(k,S)+\"]\":\"[ \"+u.call(k,\", \")+\" ]\"}if(Dt(e)){var q=W(e,l);return!(\"cause\"in Error.prototype)&&\"cause\"in e&&!vt.call(e,\"cause\")?\"{ [\"+String(e)+\"] \"+u.call(ot.call(\"[cause]: \"+l(e.cause),q),\", \")+\" }\":q.length===0?\"[\"+String(e)+\"]\":\"{ [\"+String(e)+\"] \"+u.call(q,\", \")+\" }\"}if(typeof e==\"object\"&&c){if(pt&&typeof e[pt]==\"function\"&&H)return H(e,{depth:_-a});if(c!==\"symbol\"&&typeof e.inspect==\"function\")return e.inspect()}if(Ht(e)){var Z=[];return rt&&rt.call(e,function(h,M){Z.push(l(M,e,!0)+\" => \"+l(h,e))}),st(\"Map\",I.call(e),Z,S)}if(Ut(e)){var x=[];return nt&&nt.call(e,function(h){x.push(l(h,e))}),st(\"Set\",L.call(e),x,S)}if(Vt(e))return P(\"WeakMap\");if(Kt(e))return P(\"WeakSet\");if(Jt(e))return P(\"WeakRef\");if(Ct(e))return O(l(Number(e)));if(Pt(e))return O(l(z.call(e)));if(Bt(e))return O(It.call(e));if(Nt(e))return O(l(String(e)));if(!Tt(e)&&!yt(e)){var A=W(e,l),b=lt?lt(e)===Object.prototype:e instanceof Object||e.constructor===Object,T=e instanceof Object?\"\":\"null prototype\",j=!b&&o&&Object(e)===e&&o in e?Q.call(g(e),8,-1):T?\"Object\":\"\",Ot=b||typeof e.constructor!=\"function\"?\"\":e.constructor.name?e.constructor.name+\" \":\"\",D=Ot+(j||T?\"[\"+u.call(ot.call([],j||[],T||[]),\": \")+\"] \":\"\");return A.length===0?D+\"{}\":S?D+\"{\"+J(A,S)+\"}\":D+\"{ \"+u.call(A,\", \")+\" }\"}return String(e)};function St(t,e,n){var a=(n.quoteStyle||e)===\"double\"?'\"':\"'\";return a+t+a}function At(t){return s.call(String(t),/\"/g,\"&quot;\")}function V(t){return g(t)===\"[object Array]\"&&(!o||!(typeof t==\"object\"&&o in t))}function Tt(t){return g(t)===\"[object Date]\"&&(!o||!(typeof t==\"object\"&&o in t))}function yt(t){return g(t)===\"[object RegExp]\"&&(!o||!(typeof t==\"object\"&&o in t))}function Dt(t){return g(t)===\"[object Error]\"&&(!o||!(typeof t==\"object\"&&o in t))}function Nt(t){return g(t)===\"[object String]\"&&(!o||!(typeof t==\"object\"&&o in t))}function Ct(t){return g(t)===\"[object Number]\"&&(!o||!(typeof t==\"object\"&&o in t))}function Bt(t){return g(t)===\"[object Boolean]\"&&(!o||!(typeof t==\"object\"&&o in t))}function ht(t){if(m)return t&&typeof t==\"object\"&&t instanceof Symbol;if(typeof t==\"symbol\")return!0;if(!t||typeof t!=\"object\"||!F)return!1;try{return F.call(t),!0}catch{}return!1}function Pt(t){if(!t||typeof t!=\"object\"||!z)return!1;try{return z.call(t),!0}catch{}return!1}var zt=Object.prototype.hasOwnProperty||function(t){return t in this};function y(t,e){return zt.call(t,e)}function g(t){return Lt.call(t)}function Ft(t){if(t.name)return t.name;var e=Rt.call(_t.call(t),/^function\\s*([\\w$]+)/);return e?e[1]:null}function mt(t,e){if(t.indexOf)return t.indexOf(e);for(var n=0,a=t.length;n<a;n++)if(t[n]===e)return n;return-1}function Ht(t){if(!I||!t||typeof t!=\"object\")return!1;try{I.call(t);try{L.call(t)}catch{return!0}return t instanceof Map}catch{}return!1}function Vt(t){if(!w||!t||typeof t!=\"object\")return!1;try{w.call(t,w);try{E.call(t,E)}catch{return!0}return t instanceof WeakMap}catch{}return!1}function Jt(t){if(!at||!t||typeof t!=\"object\")return!1;try{return at.call(t),!0}catch{}return!1}function Ut(t){if(!L||!t||typeof t!=\"object\")return!1;try{L.call(t);try{I.call(t)}catch{return!0}return t instanceof Set}catch{}return!1}function Kt(t){if(!E||!t||typeof t!=\"object\")return!1;try{E.call(t,E);try{w.call(t,w)}catch{return!0}return t instanceof WeakSet}catch{}return!1}function Qt(t){return!t||typeof t!=\"object\"?!1:typeof HTMLElement<\"u\"&&t instanceof HTMLElement?!0:typeof t.nodeName==\"string\"&&typeof t.getAttribute==\"function\"}function dt(t,e){if(t.length>e.maxStringLength){var n=t.length-e.maxStringLength,a=\"... \"+n+\" more character\"+(n>1?\"s\":\"\");return dt(Q.call(t,0,e.maxStringLength),e)+a}var i=s.call(s.call(t,/(['\\\\])/g,\"\\\\$1\"),/[\\x00-\\x1f]/g,Gt);return St(i,\"single\",e)}function Gt(t){var e=t.charCodeAt(0),n={8:\"b\",9:\"t\",10:\"n\",12:\"f\",13:\"r\"}[e];return n?\"\\\\\"+n:\"\\\\x\"+(e<16?\"0\":\"\")+kt.call(e.toString(16))}function O(t){return\"Object(\"+t+\")\"}function P(t){return t+\" { ? }\"}function st(t,e,n,a){var i=a?J(n,a):u.call(n,\", \");return t+\" (\"+e+\") {\"+i+\"}\"}function Xt(t){for(var e=0;e<t.length;e++)if(mt(t[e],`\n`)>=0)return!1;return!0}function Yt(t,e){var n;if(t.indent===\"\t\")n=\"\t\";else if(typeof t.indent==\"number\"&&t.indent>0)n=u.call(Array(t.indent+1),\" \");else return null;return{base:n,prev:u.call(Array(e+1),n)}}function J(t,e){if(t.length===0)return\"\";var n=`\n`+e.prev+e.base;return n+u.call(t,\",\"+n)+`\n`+e.prev}function W(t,e){var n=V(t),a=[];if(n){a.length=t.length;for(var i=0;i<t.length;i++)a[i]=y(t,i)?e(t[i],t):\"\"}var r=typeof B==\"function\"?B(t):[],c;if(m){c={};for(var v=0;v<r.length;v++)c[\"$\"+r[v]]=r[v]}for(var f in t)!y(t,f)||n&&String(Number(f))===f&&f<t.length||m&&c[\"$\"+f]instanceof Symbol||(gt.call(/[^\\w$]/,f)?a.push(e(f,t)+\": \"+e(t[f],t)):a.push(f+\": \"+e(t[f],t)));if(typeof B==\"function\")for(var p=0;p<r.length;p++)vt.call(t,r[p])&&a.push(\"[\"+e(r[p])+\"]: \"+e(t[r[p]],t));return a}\n", "const {\n  Chunks,\n  Controller,\n  Done,\n  ErrorState,\n  PendingNextPromise,\n  PendingNextPromiseReject,\n  PendingNextPromiseResolve,\n  QueuingStrategy,\n  Stream,\n  UnderlyingSource,\n} = require('./symbols')\n\nconst promisify =\n  fn =>\n  (...args) => {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(fn(...args))\n      } catch (err) {\n        reject(err)\n      }\n    })\n  }\n\nclass ReadableStreamDefaultController {\n  constructor(stream) {\n    this[Stream] = stream\n  }\n\n  enqueue(data) {\n    this[Stream].push(data)\n  }\n\n  close() {\n    this[Stream].push()\n  }\n\n  error(error) {\n    this[Stream].push(error)\n  }\n}\n\nclass ReadableByteStreamController {\n  constructor(stream) {\n    this[Stream] = stream\n  }\n\n  enqueue(data) {\n    this[Stream].push(data)\n  }\n\n  close() {\n    this[Stream].push()\n  }\n\n  error(error) {\n    this[Stream].push(error)\n  }\n}\n\nclass ReadableStream {\n  constructor(underlyingSource, queuingStrategy) {\n    this[UnderlyingSource] = underlyingSource\n    this[QueuingStrategy] = queuingStrategy\n\n    if (underlyingSource?.type === 'bytes') {\n      this[Controller] = new ReadableByteStreamController(this)\n    } else {\n      this[Controller] = new ReadableStreamDefaultController(this)\n    }\n\n    this[Chunks] = []\n    this[Done] = false\n    this[ErrorState] = null\n\n    if (underlyingSource?.start) {\n      // Constructors cannot be async so whatever we call here\n      // we have to make sure that exceptions/rejects are handled correctly.\n      promisify(underlyingSource.start)(this[Controller]).catch(err => {\n        this[Controller].error(err)\n      })\n    }\n  }\n\n  get locked() {\n    return false\n  }\n\n  [Symbol.asyncIterator]() {\n    return this\n  }\n\n  async next() {\n    if (this[PendingNextPromise]) {\n      throw new Error(\n        'Cannot call next() while a promise is pending from the previous call to next()'\n      )\n    }\n\n    // Once the stream is in an error state, we throw the error on every call to next().\n    if (this[ErrorState]) {\n      throw this[ErrorState]\n    }\n\n    if (this[Chunks].length > 0) {\n      const nextChunk = this[Chunks].shift()\n      if (nextChunk.error) {\n        // Capture the error state so that we can throw it on every call to next().\n        this[ErrorState] = nextChunk.error\n        throw nextChunk.error\n      }\n\n      return nextChunk\n    }\n\n    // Create a new promise that will be resolved or rejected when the next chunk is available.\n    this[PendingNextPromise] = new Promise((resolve, reject) => {\n      this[PendingNextPromiseResolve] = resolve\n      this[PendingNextPromiseReject] = reject\n    })\n\n    return this[PendingNextPromise]\n  }\n\n  push(data) {\n    if (this[Done]) {\n      return\n    }\n\n    if (data === undefined) {\n      this[Chunks].push({ done: true })\n      this[Done] = true\n    } else if (data instanceof Error) {\n      this[Chunks].push({ error: data, done: true })\n      this[Done] = true\n    } else {\n      this[Chunks].push({ value: data, done: false })\n    }\n\n    // Check if we have a pending promise from a previous call to next().\n    if (this[PendingNextPromise]) {\n      this[PendingNextPromise] = null\n      const resolve = this[PendingNextPromiseResolve]\n      this[PendingNextPromiseResolve] = null\n      const reject = this[PendingNextPromiseReject]\n      this[PendingNextPromiseReject] = null\n\n      const nextValue = this[Chunks].shift()\n      // We reject the errors, resolve everything else.\n      if (nextValue.error) {\n        // Capture the error state so that we can throw it on every call to next().\n        this[ErrorState] = nextValue.error\n        reject(nextValue.error)\n      } else {\n        resolve(nextValue)\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  ReadableStream,\n}\n", "const {\n  BodyReadOffset,\n  Done,\n  EdgioId,\n  GetBody,\n  GetBodyChunkFn,\n  MoveBodyToHost,\n  ReqOrRespObject,\n  BodyUsed,\n} = require('./symbols')\nconst { INTERNAL_ERROR_PREFIX } = require('./consts')\n\n// Conditionally defines the readable request and response stream reader classes\n// based on the present feature flags.\nfunction getEdgioReadableStreamReader({ host, feature_flags }) {\n  let EdgioReadableResponseStreamReader\n  let EdgioReadableRequestStreamReader\n\n  const supportsBodyChunkHostcalls = feature_flags && feature_flags['body-chunk-hostcalls']\n  if (supportsBodyChunkHostcalls) {\n    // body-chunk-hostcalls support EdgioReadableStreamReader.\n    class EdgioReadableStreamReader {\n      static MAX_CHUNK_SIZE = 64 * 1024\n\n      // Creates a new ReadableStream object from an Edgio host id.\n      constructor(reqOrRespObject, getBodyChunkFn) {\n        if (this.constructor == EdgioReadableStreamReader) {\n          throw new Error(\n            `${INTERNAL_ERROR_PREFIX}EdgioReadableStreamReader Abstract class cannot be instantiated directly.`\n          )\n        }\n        this[ReqOrRespObject] = reqOrRespObject\n        this[GetBodyChunkFn] = getBodyChunkFn\n        this[Done] = false\n        this[BodyReadOffset] = 0\n      }\n\n      async read() {\n        if (this[Done]) {\n          return { value: undefined, done: true }\n        }\n\n        // Ensure that the body is on the host before we start reading it.\n        await this[ReqOrRespObject][MoveBodyToHost]()\n\n        this[ReqOrRespObject][BodyUsed] = true\n\n        const rawChunk = this[GetBodyChunkFn](\n          this[ReqOrRespObject].edgioId,\n          this[BodyReadOffset],\n          EdgioReadableStreamReader.MAX_CHUNK_SIZE\n        )\n        if (rawChunk === undefined) {\n          this[Done] = true\n          return { value: undefined, done: true }\n        }\n\n        this[BodyReadOffset] += rawChunk.byteLength\n        const chunk = new Uint8Array(rawChunk)\n        return { value: chunk, done: false }\n      }\n    }\n\n    EdgioReadableResponseStreamReader = class EdgioReadableResponseStreamReader extends (\n      EdgioReadableStreamReader\n    ) {\n      constructor(response) {\n        super(response, host.hostcall_resp_get_body_chunk)\n      }\n    }\n\n    EdgioReadableRequestStreamReader = class EdgioReadableRequestStreamReader extends (\n      EdgioReadableStreamReader\n    ) {\n      constructor(request) {\n        super(request, host.hostcall_req_get_body_chunk)\n      }\n    }\n\n    return {\n      EdgioReadableStreamReader,\n      EdgioReadableResponseStreamReader,\n      EdgioReadableRequestStreamReader,\n    }\n  } else {\n    // Pre-body-chunk-hostcalls support EdgioReadableStreamReader\n    // We can remove this once we have body-chunk-hostcalls support\n    // released to global edge.\n    class EdgioReadableStreamReader {\n      static BUFFER_SIZE = 1024\n\n      // Creates a new ReadableStream object from an Edgio host id.\n      constructor(id, getBodyFn) {\n        if (this.constructor == EdgioReadableStreamReader) {\n          throw new Error(\n            `${INTERNAL_ERROR_PREFIX}EdgioReadableStreamReader Abstract class cannot be instantiated directly.`\n          )\n        }\n        this[EdgioId] = id\n        this[GetBody] = getBodyFn\n        this[Done] = false\n      }\n\n      async read() {\n        // Current hostcall API doesn't allow buffered reading of the bodies\n        // so we have to read it all at once.\n        const body = new Uint8Array(this[GetBody](this[EdgioId]))\n        this[Done] = true\n\n        return { value: body }\n      }\n    }\n\n    EdgioReadableResponseStreamReader = class EdgioReadableResponseStreamReader extends (\n      EdgioReadableStreamReader\n    ) {\n      constructor(response) {\n        super(response, host.hostcall_resp_get_body)\n      }\n    }\n\n    EdgioReadableRequestStreamReader = class EdgioReadableRequestStreamReader extends (\n      EdgioReadableStreamReader\n    ) {\n      constructor(request) {\n        super(request, host.hostcall_req_get_body)\n      }\n    }\n  }\n\n  return {\n    EdgioReadableResponseStreamReader,\n    EdgioReadableRequestStreamReader,\n  }\n}\n\nmodule.exports = getEdgioReadableStreamReader\n", "'use strict'\n\n/*global globalThis*/\n\n// Edgio SDK for QuickJS runtime. This file is evaluated in the runtime before\n// any of the edge function developer's code runs.\n// Top wrapper function so that we can keep internals private within the scope of the function.\n// There are two ways to export anything from the function:\n// * Assign it to globalThis so that end developer code can access it\n// * Return it from the function so that the runtime Rust code can access it\n// The host and utility objects are objects created in the Rust code.\n// The edge functions parameter comes from the bundling.\n// This function initializes the SDK and returns the main function which can then\n// be invoked over and over again.\nmodule.exports = function (runtime, edgeFunctions) {\n  const { host, utility, feature_flags } = runtime\n  const {\n    STDOUT_FD,\n    STDERR_FD,\n    ENV_VAR_NAMESPACE_EDGIO_CONFIG,\n    ENV_VAR_NAMESPACE_EDGIO_ORIGINS,\n    ENV_VAR_NAMESPACE_EDGIO_PROPENVVAR,\n    ENV_VAR_NAMESPACE_EDGIO_FEATURE_FLAGS,\n    ENV_VAR_NAMESPACE_EDGIO_USRVAR,\n    ENV_VAR_NAMESPACE_EDGIO_GEO,\n    ENV_VAR_NAMESPACE_EDGIO_WURFL,\n    ENV_VAR_NAMESPACE_EDGIO_VIRT,\n    UTF_8,\n    WASM_METRIC_JSON_PARSE_INVOCATION_TOTAL,\n    WASM_METRIC_JSON_STRINGIFY_INVOCATION_TOTAL,\n    WASM_METRIC_JSON_PARSE_MICROSECONDS_TOTAL,\n    WASM_METRIC_JSON_STRINGIFY_MICROSECONDS_TOTAL,\n    WASM_METRIC_TEXT_ENCODE_INVOCATION_TOTAL,\n    WASM_METRIC_TEXT_DECODE_INVOCATION_TOTAL,\n    WASM_METRIC_TEXT_ENCODE_MICROSECONDS_TOTAL,\n    WASM_METRIC_TEXT_DECODE_MICROSECONDS_TOTAL,\n    INTERNAL_ERROR_PREFIX,\n  } = require('./sdk/consts.js')\n  const {\n    AppendFn,\n    Body,\n    BodyOnHost,\n    BodyUsed,\n    CheckFn,\n    EdgioId,\n    Encoding,\n    ErrorCode,\n    GetFn,\n    KeysFn,\n    MoveBodyToHost,\n    Namespace,\n    Options,\n    Origins,\n    Redirected,\n    RemoveFn,\n    ReqRespHeaders,\n    RequestObject,\n    ResponseObject,\n    SendToClient,\n    SetFn,\n    Url,\n  } = require('./sdk/symbols.js')\n\n  // Parse the feature flags from QuickJs-wasm\n  const supportsBodyChunkHostcalls = feature_flags && feature_flags['body-chunk-hostcalls']\n  const supportsEapps409FetchOptions = feature_flags && feature_flags['eapps-409-fetch-options']\n  const supportsInitClearHostCall = feature_flags && feature_flags['eapps-533-init-clear-hostcall']\n  const supportsEapps563FetchTagUpsert =\n    feature_flags && feature_flags['eapps-563-fetch-tag-upsert']\n  const supportsHtmlTransformer = feature_flags && feature_flags['eapps-552-html-transformer']\n\n  // Parse the feature flags from Sailfish\n  const sailfishFeatureFlags = EdgioDict(ENV_VAR_NAMESPACE_EDGIO_FEATURE_FLAGS)\n  let supportsMetricsOnTextEncoding = false\n  try {\n    supportsMetricsOnTextEncoding = sailfishFeatureFlags.has('metrics-text-encoding')\n  } catch (_e) {\n    // Until ENV_VAR_NAMESPACE_EDGIO_FEATURE_FLAGS are deployed the first time, the namespace\n    // ENV_VAR_NAMESPACE_EDGIO_FEATURE_FLAGS does not exist and .has() will throw an exception.\n  }\n\n  // object-inspect https://github.com/inspect-js/object-inspect has to be bundled\n  // in a special manner to prevent it from using Node's built-in util.inspect.\n  // This is done during SDK bundling (see ./bundle-object-inspect.sh)\n  const inspect = require('./bundled-object-inspect.js')\n\n  // Writes the arguments to the given file descriptor by leveraging inspect facility.\n  let consoleGroupIndentDepth = 0\n  const CONSOLE_GROUP_INDENT_STEP = 2\n  const getConsoleIndent = () => ' '.repeat(consoleGroupIndentDepth)\n  function wrappedConsoleWrite(fdWrite, ...args) {\n    // Always indent the output.\n    fdWrite(getConsoleIndent())\n\n    if (args.length > 0) {\n      // If the first argument is a string, we may need to do some formatting.\n      let firstArg = args[0]\n      if (typeof firstArg === 'string') {\n        // We now have the fist arg. We will try to format it and then put it back\n        // on the args array.\n        args.shift()\n        // Parse firstArg as a format string and replace the placeholders with\n        // the remaining arguments.\n        firstArg = firstArg.replace(/%[oOdisf]/g, match => {\n          if (args.length === 0) {\n            return match\n          }\n\n          const arg = args.shift()\n          switch (match) {\n            case '%o':\n            case '%O':\n              return inspect(arg)\n            case '%d':\n            case '%i':\n              return parseInt(arg, 10).toString()\n            case '%s':\n              return arg.toString()\n            case '%f':\n              return parseFloat(arg).toString()\n            default:\n              return match\n          }\n        })\n        args.unshift(firstArg)\n      }\n    }\n\n    // Output the arguments separated by spaces. We don't use .join(' ') to\n    // avoid the extra string allocations. The tradeoff is more hostcalls.\n    for (let i = 0; i < args.length; i++) {\n      if (i !== 0) {\n        fdWrite(' ')\n      }\n\n      const arg = args[i]\n      const type = typeof arg\n      // Depending on the type, we either convert the argument to a string\n      // or we use inspect to convert it to a string.\n      switch (type) {\n        case 'string':\n          fdWrite(arg)\n          break\n        case 'number':\n        case 'function':\n          fdWrite(arg.toString())\n          break\n        case 'boolean':\n          fdWrite(arg ? 'true' : 'false')\n          break\n        case 'undefined':\n          fdWrite(type)\n          break\n        default:\n          if (arg === null) {\n            fdWrite('null')\n          } else {\n            fdWrite(inspect(arg))\n          }\n          break\n      }\n    }\n\n    fdWrite('\\n')\n  }\n  // We wrap consoleWrite in a try/catch block to avoid crashing the runtime on\n  // logging and allow the user to see the error.\n  function consoleWrite(fd, ...args) {\n    const fdWrite = utility.stream_write_all.bind(this, fd)\n    try {\n      return wrappedConsoleWrite(fdWrite, ...args)\n    } catch (e) {\n      fdWrite('Exception during console output: ')\n      fdWrite(e.toString())\n      fdWrite('\\n')\n    }\n  }\n\n  // An implementation of console object.\n  const consoleCounters = new Map()\n  globalThis.console = {\n    assert: function (condition, ...args) {\n      if (!condition) {\n        consoleWrite(STDERR_FD, 'Assertion failed:', ...args)\n      }\n    },\n    clear: function () {\n      // In a non-interactive environment, `clear` is a no-op.\n    },\n    count: function (label) {\n      consoleCounters.set(label, (consoleCounters.get(label) || 0) + 1)\n      globalThis.console.log(`${label}: ${consoleCounters.get(label)}`)\n    },\n    countReset: function (label) {\n      consoleCounters.set(label, 0)\n    },\n    debug: consoleWrite.bind(globalThis.console, STDOUT_FD),\n    dir: function (...args) {\n      // In a non-interactive environment, `dir` is the same as `log`.\n      return globalThis.console.log(...args)\n    },\n    // In a non-interactive environment, `dirxml` is the same as `log`.\n    dirxml: function (...args) {\n      // In a non-interactive environment, `dir` is the same as `log`.\n      return globalThis.console.log(...args)\n    },\n    error: consoleWrite.bind(globalThis.console, STDERR_FD),\n    group: function (...args) {\n      if (args !== undefined) {\n        globalThis.console.log(...args)\n      }\n\n      consoleGroupIndentDepth += CONSOLE_GROUP_INDENT_STEP\n    },\n    groupCollapsed: function (...args) {\n      // In a non-interactive environment, `groupCollapsed` is the same as `group`.\n      return globalThis.console.group(...args)\n    },\n    groupEnd: function () {\n      consoleGroupIndentDepth = Math.max(consoleGroupIndentDepth - CONSOLE_GROUP_INDENT_STEP, 0)\n    },\n    info: consoleWrite.bind(globalThis.console, STDOUT_FD),\n    log: consoleWrite.bind(globalThis.console, STDOUT_FD),\n    profile: function () {\n      // In a non-interactive environment, `profile` is a no-op.\n    },\n    table: function (data, columns) {\n      // Not implemented for now - just print the object.\n      return globalThis.console.warn('table not implemented', data, columns)\n    },\n    time: function () {\n      // Not implemented.\n    },\n    timeEnd: function (label) {\n      // Not implemented.\n      return globalThis.console.warn('timeEnd not implemented', label)\n    },\n    timeLog: function (label) {\n      // Not implemented.\n      return globalThis.console.warn('timeLog not implemented', label)\n    },\n    timeStamp: function () {\n      // In a non-interactive environment, `timeStamp` is a no-op.\n    },\n    trace: consoleWrite.bind(globalThis.console, STDOUT_FD),\n    warn: consoleWrite.bind(globalThis.console, STDERR_FD),\n  }\n\n  // sdk.js is provides compatibility between Javascript and the host API\n  // The classes in sdk.js are proxies for the host, meaning that all the\n  // object's data should be forwarded to or retrieved from the Host API\n  // and not stored here in the JavaScript objects. respond_id and request_id\n  // are the unique identifiers into the Host API.\n\n  // The design is to put as much code in sdk.js as possible while keeping\n  // the code in runtime.rs as minimal as possible. runtime.rs should be a\n  // simple API interface for sdk.js. This keeps the javascript to Rust\n  // interface easy to maintain.\n\n  const { ReadableStream } = require('./sdk/readable-stream.js')\n  globalThis.ReadableStream = ReadableStream\n\n  // Classes to read bodies from Requests and Responses.\n  const { EdgioReadableResponseStreamReader, EdgioReadableRequestStreamReader } =\n    require('./sdk/edgio-readable-stream-reader.js')(runtime)\n\n  // TODO: Replace ReadableStream with a polyfill https://jira.atlas.llnw.com/browse/EAPPS-179\n  class EdgioReadableResponseStream {\n    constructor(response) {\n      this[ResponseObject] = response\n    }\n\n    getReader() {\n      return new EdgioReadableResponseStreamReader(this[ResponseObject])\n    }\n  }\n  class EdgioReadableRequestStream {\n    constructor(request) {\n      this[RequestObject] = request\n    }\n\n    getReader() {\n      return new EdgioReadableRequestStreamReader(this[RequestObject])\n    }\n  }\n\n  // Implementation of https://developer.mozilla.org/en-US/docs/Web/API/Headers\n  // Headers is an abstract proxy class to the edgio host API. It should not\n  // store any header information itself.\n  class EdgioHeaders {\n    // Creates a new EdgioHeaders object from an Edgio host requestId or responseId\n    constructor(id, headers, { appendFn, checkFn, getFn, keysFn, removeFn, setFn }) {\n      if (this.constructor == EdgioHeaders) {\n        throw new Error(\n          `${INTERNAL_ERROR_PREFIX}Headers Abstract class cannot be instantiated directly.`\n        )\n      }\n\n      this[EdgioId] = id\n      this[AppendFn] = appendFn\n      this[CheckFn] = checkFn\n      this[GetFn] = getFn\n      this[KeysFn] = keysFn\n      this[RemoveFn] = removeFn\n      this[SetFn] = setFn\n\n      // The spec says headers can be\n      // * dictionary: {name1 as string: value1 as string, name2 as string: [value2 as string array] }\n      // * TODO: array of pairs: [ [name as string, value as string], [name2 as string, value2 as string] ]\n      // * TODO: Headers object\n      // https://jira.atlas.llnw.com/browse/EAPPS-180\n\n      // Use our append() method to add these headers, so if there is duplicates\n      // they get appended, not overwritten. e.g. { a: 'a', A: 'b' } or [[ a,a ],[a,b]]\n      if (Array.isArray(headers)) {\n        headers.forEach(h => {\n          // ensure each header is an array a pair\n          if (!Array.isArray(h)) {\n            throw new Error(\n              `When passing an array of headers, each array element must be an array of length = 2. '${h}' is type '${typeof h}' not type array.`\n            )\n          }\n          if (h.length !== 2) {\n            throw new Error(\n              `When passing an array of headers, each array element must be an array of length = 2. '${h}' is array of length ${h.length}.`\n            )\n          }\n          host.hostcall_debug(`.append(${h})`)\n          this.append(h[0], h[1])\n        })\n      } else if (headers && headers instanceof Headers) {\n        // This is an instance of our Headers class so we make a copy the headers.\n        const rawHeaders = headers.getRaw()\n        Object.keys(rawHeaders).forEach(name => {\n          // rawHeaders values are arrays of strings. Append each value separately\n          // so they are properly injected by the hostcalls_ API.\n          rawHeaders[name].forEach(value => {\n            this.append(name, value)\n          })\n        })\n      } else if (headers && headers instanceof EdgioHeaders) {\n        for (const key of headers.keys()) {\n          for (const value of headers._getValuesForKey(key)) {\n            this.append(key, value)\n          }\n        }\n      } else if (\n        headers &&\n        Function.prototype.toString.call(headers.constructor).match(/class.*/)\n      ) {\n        // Check if this item is an instance of some other class\n        throw new Error(\n          `'headers' must be a 'Headers' instance, dictionary, or an array of array pairs. Found ${Function.prototype.toString.call(\n            headers.constructor\n          )}`\n        )\n      } else if (typeof headers === 'object') {\n        Object.keys(headers).forEach(name => {\n          this.append(name, headers[name])\n        })\n      } else if (headers !== undefined) {\n        // headers === undefined is ok. So this must be the last else if check.\n        throw new Error(\n          `'headers' must be a dictionary or an array of array pairs. Found type ${typeof headers}.`\n        )\n      }\n    }\n\n    // This is actually more restrictive than the Specification. Chrome allows name types like: null, number.\n    _validateName(name) {\n      if (name === undefined) {\n        throw new Error(\"The 'name' argument is required, but was not present.\")\n      }\n\n      if (typeof name !== 'string') {\n        throw new Error(`The 'name' argument must be a 'string' type, not a '${typeof name}' type.`)\n      }\n      return name\n    }\n\n    // This is actually more restrictive than the Specification. Chrome allows value types like: null, number.\n    _validateValue(value) {\n      if (value === undefined) {\n        throw new Error(\"The 'value' argument is required, but was not present.\")\n      }\n      if (typeof value !== 'string' && !Array.isArray(value)) {\n        throw new Error(\n          `The 'value' argument must be a 'string' or 'array' type, not a '${typeof value}' type.`\n        )\n      }\n      return value\n    }\n\n    // Append the value to the existing header. Set the header if it does not exist yet\n    append(name, value) {\n      // We skip null and undefined values as there is nothing to append.\n      // This makes it possible for end developers to write code like:\n      //   `headers.append('some-header', origHeaders.get('some-header'))`\n      // without worrying about null or undefined.\n      // This is very different from node-fetch which converts null/undefined\n      // to string 'null'/'undefined' and appends the header but we believe\n      // it's a far better behavior.\n      if (value === null || value === undefined) {\n        return\n      }\n      if (Array.isArray(value)) {\n        for (const v of value) {\n          this[AppendFn](this[EdgioId], this._validateName(name), this._validateValue(v))\n        }\n      } else {\n        this[AppendFn](this[EdgioId], this._validateName(name), this._validateValue(value))\n      }\n    }\n\n    // Delete the header from the list.\n    delete(name) {\n      this[RemoveFn](this[EdgioId], this._validateName(name))\n    }\n\n    // Return array of header pairs\n    entries() {\n      const entries = []\n      for (const key of this.keys()) {\n        entries.push([key, this.get(key)])\n      }\n      return entries\n    }\n\n    // executes callback on each header pair\n    forEach(callback) {\n      for (const key of this.keys()) {\n        callback(this.get(key), key)\n      }\n    }\n\n    /// Get the value of the specified name. Spec at https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n    /// @param {string} name - the name of the header (throws if parameter is missing)\n    /// @returns {(string|null)} - the value of the header. Returns a string of comma separated values if there are multiple values or null if there are no values.\n    get(name) {\n      // get_header_values returns undefined or an array of string. The spec says\n      // it should return a string of comma separated values if there are multiple values.\n      const headers = this[GetFn](this[EdgioId], this._validateName(name))\n      if (Array.isArray(headers)) return headers.join(', ')\n\n      // Per the spec we return null when there are no values.\n      return headers === undefined ? null : headers\n    }\n\n    /**\n     * Get all of the value of the specified name as an array of strings. This is non-standard but useful.\n     * @param {string} key\n     * @returns {string[]}\n     * @private\n     */\n    _getValuesForKey(key) {\n      // get_header_values returns undefined or an array of string.\n      const headers = this[GetFn](this[EdgioId], this._validateName(key))\n      if (headers === undefined || headers === null) {\n        return []\n      }\n\n      return headers\n    }\n\n    /**\n     * Returns an array of strings for the set-cookie headers.\n     * @returns {string[]}\n     */\n    getSetCookie() {\n      return this._getValuesForKey('set-cookie')\n    }\n\n    // Returns true of the header name exists, otherwise false\n    has(name) {\n      return this[CheckFn](this[EdgioId], this._validateName(name))\n    }\n\n    // Returns an iterator of header names  - used by runtime.rs to return all response headers to host\n    keys() {\n      return this[KeysFn](this[EdgioId])\n    }\n\n    // Set the header and value. Overwrite any existing headers with the same name\n    set(name, value) {\n      // We skip null and undefined values as there is nothing to set.\n      // This makes it possible for end developers to write code like:\n      //   `headers.set('some-header', origHeaders.get('some-header'))`\n      // without worrying about null or undefined.\n      // This is very different from node-fetch which converts null/undefined\n      // to string 'null'/'undefined' and sets the header but we believe\n      // it's a far better behavior.\n      if (value === null || value === undefined) {\n        return\n      }\n      this[SetFn](this[EdgioId], this._validateName(name), this._validateValue(value))\n    }\n\n    // Returns an iterator of header values\n    values() {\n      const values = []\n      for (const key of this.keys()) {\n        values.push(this.get(key))\n      }\n      return values\n    }\n\n    // A non-standard method that returns a dictionary of all headers\n    // during the JSON generation process.\n    toJSON() {\n      const json = {}\n      for (const key of this.keys()) {\n        json[key] = this.get(key)\n      }\n      return json\n    }\n  }\n\n  class EdgioResponseHeaders extends EdgioHeaders {\n    constructor(responseId, headers) {\n      super(responseId, headers, {\n        appendFn: host.hostcall_resp_append_header,\n        checkFn: host.hostcall_resp_check_header,\n        getFn: host.hostcall_resp_get_header_values,\n        keysFn: utility.resp_get_header_names,\n        removeFn: host.hostcall_resp_remove_header,\n        setFn: host.hostcall_resp_set_header,\n      })\n    }\n  }\n\n  class EdgioRequestHeaders extends EdgioHeaders {\n    constructor(requestId, headers) {\n      super(requestId, headers, {\n        appendFn: host.hostcall_req_append_header,\n        checkFn: host.hostcall_req_check_header,\n        getFn: host.hostcall_req_get_header_values,\n        keysFn: utility.req_get_header_names,\n        removeFn: host.hostcall_req_remove_header,\n        setFn: host.hostcall_req_set_header,\n      })\n    }\n  }\n\n  // Implementation of https://developer.mozilla.org/en-US/docs/Web/API/Headers\n  // \"class HeadersInternal\" implements the same functions as the hostcalls_ so we can\n  // pass it into the \"class Headers extends EdgioHeaders\" below.\n  class HeadersInternal {\n    // Normally we do not store anyting in the local object. But, since the Sailfish\n    // has separate request and response headers we need to implment a standard Headers\n    // class for compatibility with our customers' frameworks.\n    constructor() {\n      // Since headers can have multiple values, all values are a dictionary\n      // of arrays of strings.\n      this._headers = {}\n    }\n\n    appendFn = (_requestId, key, value) => {\n      if (!this._headers[key]) this._headers[key] = []\n      this._headers[key].push(value)\n    }\n\n    checkFn = (_requestId, key) => {\n      return !!this._headers[key]\n    }\n\n    getFn = (_requestId, key) => {\n      // The spec says return null if the header does not exist.\n      if (!this._headers[key]) return null\n\n      return this._headers[key]\n    }\n\n    getRawFn = () => {\n      return this._headers\n    }\n\n    keysFn = _requestId => {\n      return Object.keys(this._headers)\n    }\n\n    removeFn = (_requestId, key) => {\n      delete this._headers[key]\n    }\n\n    setFn = (_requestId, key, value) => {\n      this._headers[key] = [value]\n    }\n  }\n\n  globalThis.Headers = class Headers extends EdgioHeaders {\n    constructor(headers) {\n      const _headersInstance = new HeadersInternal()\n\n      // This request Id of 0 is passed to all the header calls, but since this class\n      // is only local storage it is ignored in all the calls.\n      super(0, headers, {\n        appendFn: _headersInstance.appendFn.bind(_headersInstance),\n        checkFn: _headersInstance.checkFn.bind(_headersInstance),\n        getFn: _headersInstance.getFn.bind(_headersInstance),\n        keysFn: _headersInstance.keysFn.bind(_headersInstance),\n        removeFn: _headersInstance.removeFn.bind(_headersInstance),\n        setFn: _headersInstance.setFn.bind(_headersInstance),\n      })\n      // Store the headers instance so it does not go out of scope\n      this._headersInstance = _headersInstance\n    }\n    getRaw = () => {\n      return this._headersInstance.getRawFn()\n    }\n  }\n\n  /// Fetch API Request implementation per https://fetch.spec.whatwg.org/#request-class\n  globalThis.Request = class {\n    constructor(input, options) {\n      this[Options] = options || {}\n      this[BodyUsed] = false\n\n      // If it already has a requestId, this is fully formed request from the host.\n      if (typeof options?.edgio?.id === 'number') {\n        this[EdgioId] = options?.edgio?.id\n        this[ReqRespHeaders] = new EdgioRequestHeaders(this[EdgioId])\n        this[BodyOnHost] = true\n        return\n      }\n      // Otherwise we need to create a new Request in the host and set its properties.\n      if (typeof input !== 'string') {\n        // TODO: add support for `const req = new Request(request);`\n        throw new Error(`\"string\" type is accepted for the input parameter, not '${typeof input}'`)\n      }\n      const url = input\n\n      // Method is undefined or string.\n      if (this[Options].method !== undefined && typeof this[Options].method !== 'string') {\n        throw new Error(\n          `options.method must be type 'undefined' or 'string', not '${typeof this[Options]\n            .method}'`\n        )\n      }\n      const method = this[Options].method || 'GET'\n      this[EdgioId] = host.hostcall_req_create(method, url)\n      // We invoke the setting of the headers after we have set the URL. First, we are forced\n      // to do this with the API but also we want the `host` header, if such exists, to win\n      // over any domain that the user has specified in the URL.\n      this[ReqRespHeaders] = new EdgioRequestHeaders(this[EdgioId], this[Options]?.headers || {})\n\n      const body = this[Options].body\n      delete this[Options].body // don't keep a copy of the body in case it is large\n      this[BodyUsed] = false\n\n      if (body) {\n        this[Body] = body\n      }\n      this[BodyOnHost] = false\n    }\n\n    blob() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'blob' method is not supported by the Request class.`\n      )\n    }\n\n    get body() {\n      // According to the spec, body is null for GET/HEAD\n      const method = this.method\n      if (method === 'GET' || method === 'HEAD') {\n        return null\n      }\n\n      // This function is not asynchronous so we cannot await this[MoveBodyToHost]()\n      // Instead, we will do that from the ReadableStreamReader.read() method.\n      return new EdgioReadableRequestStream(this)\n    }\n\n    get bodyUsed() {\n      // TODO: Should/Can this be moved to the EdgioReadableRequestStream class\n      return this[BodyUsed]\n    }\n\n    get cache() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'cache' property is not supported by the Request class.`\n      )\n    }\n\n    get credentials() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'credentials' property is not supported by the Request class.`\n      )\n    }\n\n    clone() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'clone' method is not supported by the Request class.`\n      )\n    }\n\n    get destination() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'destination' property is not supported by the Request class.`\n      )\n    }\n\n    formData() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'formData' method is not supported by the Request class.`\n      )\n    }\n\n    get headers() {\n      return this[ReqRespHeaders]\n    }\n\n    get integrity() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'integrity' property is not supported by the Request class.`\n      )\n    }\n\n    get method() {\n      const method = host.hostcall_req_get_method(this[EdgioId])\n      return method\n    }\n\n    set method(method) {\n      return host.hostcall_req_set_method(this[EdgioId], method) // eslint-disable-line\n    }\n\n    get mode() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'mode' property is not supported by the Request class.`\n      )\n    }\n\n    get redirect() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'redirect' property is not supported by the Request class.`\n      )\n    }\n\n    get referrer() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'referrer' property is not supported by the Request class.`\n      )\n    }\n\n    get referrerPolicy() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'referrerPolicy' property is not supported by the Request class.`\n      )\n    }\n\n    get signal() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'signal' property is not supported by the Request class.`\n      )\n    }\n\n    async arrayBuffer() {\n      await this[MoveBodyToHost]()\n\n      this[BodyUsed] = true\n\n      return host.hostcall_req_get_body(this[EdgioId])\n    }\n\n    async text() {\n      const buffer = await this.arrayBuffer()\n      if (buffer.byteLength === 0) {\n        return ''\n      }\n\n      return new TextDecoder(UTF_8).decode(buffer)\n    }\n\n    async json() {\n      return JSON.parse(await this.text())\n    }\n\n    get url() {\n      return host.hostcall_req_get_uri(this[EdgioId])\n    }\n\n    set url(uri) {\n      return host.hostcall_req_set_uri(this[EdgioId], uri) // eslint-disable-line\n    }\n\n    get path() {\n      return host.hostcall_req_get_path(this[EdgioId])\n    }\n\n    get edgioId() {\n      return this[EdgioId]\n    }\n\n    toJSON() {\n      return {\n        method: this.method,\n        url: this.url,\n        headers: this.headers,\n      }\n    }\n\n    cloneWithoutBody() {\n      const clone_id = host.hostcall_req_clone_without_body(this[EdgioId])\n      const req = new Request(null, {\n        edgio: {\n          id: clone_id,\n        },\n      })\n      this[ReqRespHeaders] = new EdgioRequestHeaders(clone_id)\n      return req\n    }\n\n    async [MoveBodyToHost]() {\n      if (this[BodyOnHost]) {\n        return\n      }\n\n      const body = this[Body]\n      if (body) {\n        if (this.method === 'GET' || this.method === 'HEAD') {\n          throw new Error('Request with GET/HEAD method cannot have body.')\n        }\n\n        const edgioId = this[EdgioId]\n        if (typeof body === 'string') {\n          host.hostcall_debug(`new Request(${edgioId}, string: ${body})`)\n          host.hostcall_req_set_body_from_string(edgioId, body)\n        } else if (body instanceof ArrayBuffer) {\n          // Handle ArrayBuffer directly\n          host.hostcall_debug(`new Request(ArrayBuffer: len=${body.byteLength})`)\n          host.hostcall_req_set_body_from_array_buffer(edgioId, body)\n        } else if (ArrayBuffer.isView(body)) {\n          // Handle TypedArrays directly\n          host.hostcall_debug(`new Request(TypedArray: len=${body.byteLength})`)\n          host.hostcall_req_set_body_from_array_buffer(edgioId, body.buffer)\n        } else if (body instanceof ReadableStream) {\n          // Handle ReadableStream directly\n          host.hostcall_debug(`new Request(ReadableStream)`)\n          for await (const chunk of body) {\n            if (typeof chunk === 'string') {\n              host.hostcall_req_append_body_from_string(edgioId, chunk)\n            } else if (chunk instanceof ArrayBuffer) {\n              host.hostcall_req_append_body_from_array_buffer(edgioId, chunk)\n            } else if (ArrayBuffer.isView(chunk)) {\n              host.hostcall_req_append_body_from_array_buffer(edgioId, chunk.buffer)\n            } else {\n              const text = chunk?.toString()\n              if (text) {\n                host.hostcall_req_append_body_from_string(edgioId, chunk.toString())\n              } else {\n                throw new Error('new Request(ReadableStream: chunk is not string or ArrayBuffer)')\n              }\n            }\n          }\n        } else {\n          // TODO: Support for Blobs(), DataView, FormData, URLSearchParams, String\n          // Best effort on other types of bodies.\n          host.hostcall_debug(`new Request(other: ${body.toString()})`)\n          host.hostcall_req_set_body_from_string(edgioId, body.toString())\n        }\n      }\n\n      // The body has been moved to the host, so we can remove it from the local object\n      // and maybe save some memory.\n      this[Body] = null\n      this[BodyOnHost] = true\n    }\n  }\n\n  /// Fetch API Response implementation per https://fetch.spec.whatwg.org/#response-class\n  /// Where things are not formally defined (e.g. what is the default status code) we follow\n  /// Chrome's implementation.\n  globalThis.Response = class {\n    constructor(body, optionsOrResponse) {\n      // These variables are concepts that are not supported in Sailfish so we need\n      // to keep track of them in this instance's storage.\n      this[BodyUsed] = false\n      this[BodyOnHost] = false\n      this[Redirected] = false\n      this[Url] = null\n\n      if (typeof optionsOrResponse?.edgio?.id === 'number') {\n        // It is a response from the host, so we are given the ID.\n        this[EdgioId] = optionsOrResponse?.edgio?.id\n        this[ReqRespHeaders] = new EdgioResponseHeaders(this[EdgioId])\n        host.hostcall_debug(`_edgioNew Response: ${this[EdgioId]}`)\n        this[BodyOnHost] = true // assume the host has a body. TODO: not always correct\n        // No need to set all the properties, because the host already has them.\n        return\n      }\n\n      if (optionsOrResponse instanceof Response) {\n        const clone = optionsOrResponse.cloneWithoutBody()\n        this[EdgioId] = clone[EdgioId]\n        this[ReqRespHeaders] = clone[ReqRespHeaders]\n        this[Redirected] = clone[Redirected]\n        this[Url] = clone[Url]\n      } else {\n        // It's a new Response rather than an existing from the host, or one to clone,\n        // create a new Response in the host and set its properties.\n        this[Options] = optionsOrResponse || {}\n        // statusMessage is not supported by Sailfish yet.\n        // this[Options].statusMessage = this[Options].statusMessage || \"OK\"\n\n        // Differentiate between a status = 0 and status = undefined\n        // Default response is 200 OK\n        if (isNaN(this[Options].status)) this[Options].status = 200\n\n        // From sailfish src/modules/wasm/hostcalls/response.cc\n        // Do not allow status codes that can interfere with functioning of the CDN.\n        if (\n          this[Options].status < 200 ||\n          this[Options].status > 599 ||\n          this[Options].status === 204 ||\n          this[Options].status === 304\n        ) {\n          throw new Error(\n            `The status provided ${this[Options].status} must be >= 200 and <= 599, and not 204 or 304.`\n          )\n        }\n        this[EdgioId] = host.hostcall_resp_create(this[Options].status)\n        this[ReqRespHeaders] = new EdgioResponseHeaders(this[EdgioId], this[Options]?.headers || {})\n      }\n\n      if (body) {\n        this[Body] = body\n      }\n    }\n\n    blob() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'blob' method is not supported by the Response class.`\n      )\n    }\n\n    get body() {\n      // This function is not asynchronous so we cannot await this[MoveBodyToHost]()\n      // Instead, we will do that from the ReadableStreamReader.read() method.\n\n      if (this[BodyOnHost] || this[Body]) {\n        return new EdgioReadableResponseStream(this)\n      }\n\n      // The spec says to return null when no body was given.\n      return null\n    }\n\n    get bodyUsed() {\n      return this[BodyUsed]\n    }\n\n    clone() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'clone' method is not supported by the Response class.`\n      )\n    }\n\n    formData() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'formData' method is not supported by the Response class.`\n      )\n    }\n\n    get headers() {\n      return this[ReqRespHeaders]\n    }\n\n    async arrayBuffer() {\n      await this[MoveBodyToHost]()\n\n      this[BodyUsed] = true\n\n      return host.hostcall_resp_get_body(this[EdgioId])\n    }\n\n    async text() {\n      const buffer = await this.arrayBuffer()\n      if (buffer.byteLength === 0) {\n        return ''\n      }\n\n      return new TextDecoder(UTF_8).decode(buffer)\n    }\n    async json() {\n      return JSON.parse(await this.text())\n    }\n\n    get ok() {\n      let status = this.status\n      return status >= 200 && status < 300\n    }\n\n    static redirect(url, status) {\n      return new Response(undefined, { headers: { location: url }, status: status || 302 })\n    }\n\n    set redirected(newRedirected) {\n      this[Redirected] = newRedirected\n    }\n\n    get redirected() {\n      return this[Redirected]\n    }\n\n    get status() {\n      return host.hostcall_resp_get_status(this[EdgioId])\n    }\n\n    get statusText() {\n      return host.hostcall_resp_get_reason(this[EdgioId])\n    }\n\n    get type() {\n      throw new Error(\n        `${INTERNAL_ERROR_PREFIX}The 'type' property is not supported by the Response class.`\n      )\n    }\n\n    get url() {\n      return this[Url]\n    }\n\n    get edgioId() {\n      return this[EdgioId]\n    }\n\n    toJSON() {\n      return {\n        status: this.status,\n        statusText: this.statusText,\n        headers: this.headers,\n      }\n    }\n\n    cloneWithoutBody() {\n      const clone_id = host.hostcall_resp_clone_without_body(this[EdgioId])\n      const resp = new Response(null, {\n        edgio: {\n          id: clone_id,\n        },\n      })\n      resp[Url] = this[Url]\n      resp[Redirected] = this[Redirected]\n      resp[ReqRespHeaders] = new EdgioResponseHeaders(clone_id)\n      return resp\n    }\n\n    async [SendToClient]() {\n      await this[MoveBodyToHost]()\n\n      // Then \"send\" the response to the client.\n      host.hostcall_resp_send_to_client(this.edgioId)\n    }\n\n    async [MoveBodyToHost]() {\n      if (this[BodyOnHost]) {\n        return\n      }\n\n      const body = this[Body]\n\n      // null/undefined is a special case because there is nothing to\n      // communicate to the host and the body can never be on the host.\n      // It is thus important that we don't flip the BodyOnHost flag\n      // because other code depends on it.\n      if (body === null || body === undefined) {\n        return\n      }\n\n      const edgioId = this[EdgioId]\n      if (typeof body === 'string') {\n        host.hostcall_debug(`new Response(string: ${body})`)\n        host.hostcall_resp_set_body_from_string(edgioId, body)\n      } else if (body instanceof ArrayBuffer) {\n        // Handle ArrayBuffer directly\n        host.hostcall_debug(`new Response(ArrayBuffer: len=${body.byteLength})`)\n        host.hostcall_resp_set_body_from_array_buffer(edgioId, body)\n      } else if (ArrayBuffer.isView(body)) {\n        // Handle TypedArrays directly\n        host.hostcall_debug(`new Response(TypedArray: len=${body.byteLength})`)\n        host.hostcall_resp_set_body_from_array_buffer(edgioId, body.buffer)\n      } else if (body instanceof ReadableStream) {\n        if (!supportsBodyChunkHostcalls) {\n          throw new Error('ReadableStream is not supported by the Response class.')\n        }\n        // Handle ReadableStream directly\n        host.hostcall_debug('new Response(ReadableStream)')\n        for await (const chunk of body) {\n          if (typeof chunk === 'string') {\n            host.hostcall_resp_append_body_from_string(edgioId, chunk)\n          } else if (chunk instanceof ArrayBuffer) {\n            host.hostcall_resp_append_body_from_array_buffer(edgioId, chunk)\n          } else if (ArrayBuffer.isView(chunk)) {\n            host.hostcall_resp_append_body_from_array_buffer(edgioId, chunk.buffer)\n          } else {\n            const text = chunk?.toString()\n            if (text) {\n              host.hostcall_resp_append_body_from_string(edgioId, chunk.toString())\n            } else {\n              throw new Error('new Response(ReadableStream: chunk is not string or ArrayBuffer)')\n            }\n          }\n        }\n      } else {\n        // TODO: Support for Blobs(), DataView, FormData, ReadableStream, URLSearchParams, String\n        // Best effort on other types of bodies\n        host.hostcall_debug(`new Response(other: ${body.toString()})`)\n        host.hostcall_resp_set_body_from_string(edgioId, body.toString())\n      }\n\n      // The body has been moved to the host, so we can remove it from the local object\n      // and maybe save some memory.\n      this[Body] = null\n      this[BodyOnHost] = true\n    }\n  }\n\n  class ResponseError extends Error {\n    // Creates a new ResponseError object from an Edgio host error response code.\n    constructor(responseErrorCode) {\n      super()\n      this[ErrorCode] = responseErrorCode\n    }\n\n    get code() {\n      return this[ErrorCode]\n    }\n\n    get message() {\n      return host.hostcall_resp_get_error_code_message(this[ErrorCode])\n    }\n\n    toString() {\n      return `${this.message} (code: ${this.code})`\n    }\n  }\n\n  // EdgioDict(namespace) returns a proxy class to the Edgio host API.\n  function EdgioDict(namespace) {\n    // The Proxy class requires a object to be passed in. We create a dummy\n    // object that contains the dictionary's namespace.\n    const namespaces = { namespace: namespace }\n    const dictProxy = new Proxy(namespaces, {\n      // Intercept property access and return the corresponding value\n      get(target, property) {\n        // Allow for .get(), .getBase64Decoded(), .has() and .keys() to be called directly on the proxy\n        if (property === 'get') {\n          return function (key) {\n            return host.hostcall_dict_get(target.namespace, key)\n          }\n        }\n        if (property === 'getBase64Decoded') {\n          return function (key) {\n            return new Uint8Array(host.hostcall_dict_get_base64_decoded(target.namespace, key))\n          }\n        }\n        if (property === 'has') {\n          return function (key) {\n            return host.hostcall_dict_check(target.namespace, key)\n          }\n        }\n        if (property === 'keys') {\n          return function () {\n            return utility.dict_get_keys(target.namespace)\n          }\n        }\n        return host.hostcall_dict_get(target.namespace, property)\n      },\n      // Intercept Object.getOwnPropertyDescriptor()\n      getOwnPropertyDescriptor(target, property) {\n        return {\n          value: host.hostcall_dict_get(target.namespace, property),\n          writable: false,\n          enumerable: true,\n          configurable: true,\n        }\n      },\n      // Disallow setting properties\n      defineProperty(_target, _key, _descriptor) {\n        return false\n      },\n      // Disallow deleting properties\n      deleteProperty(_target, _property) {\n        return false\n      },\n      // Intercept 'in' operator to check if a property exists\n      has(target, property) {\n        return host.hostcall_dict_check(target.namespace, property)\n      },\n      // Intercept Object.keys(), Object.getOwnPropertyNames(), etc.\n      ownKeys(target) {\n        return utility.dict_get_keys(target.namespace)\n      },\n    })\n\n    return dictProxy\n  }\n\n  // EdgioSet is a proxy class to the Edgio host API.\n  class EdgioSet {\n    // Creates a new EdgioSet object from a given Set namespace\n    constructor(namespace) {\n      this[Namespace] = namespace\n    }\n\n    // Returns true if the Set key exists, otherwise false\n    has(key) {\n      return host.hostcall_unique_set_check(this[Namespace], key)\n    }\n\n    // Returns array of Set keys\n    keys() {\n      return utility.unique_set_get_keys(this[Namespace])\n    }\n\n    toJSON() {\n      return this.keys()\n    }\n  }\n\n  // EdgioMetrics is a proxy class to the Edgio host API.\n  class EdgioMetrics {\n    /// Start a timer with the index of the customer metric\n    /// @param {number} index - the index of the timer\n    startTimer(index) {\n      return host.hostcall_metrics_start_timer(index)\n    }\n    /// Stop a timer with the index of the customer metric\n    /// @param {number} index - the index of the timer\n    stopTimer(index) {\n      return host.hostcall_metrics_stop_timer(index)\n    }\n    /// Add a value to the customer metric\n    /// @param {number} index - the index of the metric\n    /// @param {number} value - the value to add\n    add(index, value) {\n      return host.hostcall_metrics_add(index, value)\n    }\n  }\n\n  // A helper function to wrap a function with hostcall_metrics\n  function wrapFunctionCallWithMetrics(invocationCountId, microsecondTimerId, fn, ...args) {\n    host.hostcall_metrics_add(invocationCountId, 1)\n    host.hostcall_metrics_start_timer(microsecondTimerId)\n    try {\n      return fn(...args)\n      // Let all exceptions bubble up to the caller (as if we did not wrap this function)\n    } finally {\n      // Ensure the timer is always stopped or the next start_timer for this id will fail.\n      host.hostcall_metrics_stop_timer(microsecondTimerId)\n    }\n  }\n\n  // Wrap the JSON functions so we can add metrics to them.\n  const originalJSONparse = JSON.parse\n  const originalJSONstringify = JSON.stringify\n  globalThis.JSON = {\n    parse: (...args) => {\n      return wrapFunctionCallWithMetrics(\n        WASM_METRIC_JSON_PARSE_INVOCATION_TOTAL,\n        WASM_METRIC_JSON_PARSE_MICROSECONDS_TOTAL,\n        originalJSONparse,\n        ...args\n      )\n    },\n    stringify: (...args) => {\n      return wrapFunctionCallWithMetrics(\n        WASM_METRIC_JSON_STRINGIFY_INVOCATION_TOTAL,\n        WASM_METRIC_JSON_STRINGIFY_MICROSECONDS_TOTAL,\n        originalJSONstringify,\n        ...args\n      )\n    },\n  }\n\n  // We need to inject a \"module\" object into the global scope so that the bundled\n  // code produced by the build system can be executed. The module object can be empty.\n  globalThis.module = {}\n\n  // __dirname and __filename are shimmed as a lot of code expects them to be available.\n  globalThis.__dirname = '/'\n  globalThis.__filename = '/index.js'\n\n  // shims for the global object\n  globalThis.global = globalThis\n\n  // Do not allow require() in edge-functions. Throw nice error message instead.\n  globalThis.require = moduleName => {\n    throw new Error(\n      `The Node.js function \"require('${moduleName}')\" is not supported in edge-functions. ` +\n        'Please refer to https://docs.edg.io/guides/v7/edge-functions#polyfills for more information.'\n    )\n  }\n\n  if (supportsHtmlTransformer) {\n    globalThis.HtmlTransformer = class HtmlTransformer {\n      constructor(definitions, output_callback) {\n        this[EdgioId] = utility.html_transformer_new(\n          HtmlTransformer.hook_callbacks(definitions),\n          output_callback\n        )\n      }\n      // Wrap the write and end in async functions so we can await them\n      // which allows is necessary since the HtmlTransformer callbacks are\n      // async functions, which are triggered from write() and end().\n      async write(chunk) {\n        return new Promise((resolve, reject) => {\n          try {\n            resolve(utility.html_transformer_write(this[EdgioId], chunk))\n          } catch (e) {\n            reject(e)\n          }\n        })\n      }\n      async end() {\n        return new Promise((resolve, reject) => {\n          try {\n            resolve(utility.html_transformer_end(this[EdgioId]))\n          } catch (e) {\n            reject(e)\n          }\n        })\n      }\n\n      // Hook the user's callback functions so we can wrap\n      // the wasm object pointer with a Javascsript Proxy Class\n      // and pass the Proxy to the user's callback.\n      static hook_callbacks(definitions) {\n        function makeProxy(className, rawPtr) {\n          return new Proxy(\n            { rawPtr: rawPtr },\n            {\n              get(target, property) {\n                return (...args) => {\n                  // Proxy the call to html_transformer_proxy()\n                  let proxyResults = utility.html_transformer_proxy(\n                    className,\n                    property.toString(),\n                    target.rawPtr,\n                    args\n                  )\n\n                  // start_tag's response needs to be wrapped in it own Proxy<start_tag>\n                  if (property === 'start_tag') {\n                    proxyResults = makeProxy('start_tag', proxyResults)\n                  }\n\n                  // Each attribute in the returned array needs to be wrapped in its own Proxy<attribute>\n                  if (property === 'attributes') {\n                    for (let i = 0; i < proxyResults.length; i++) {\n                      proxyResults[i] = makeProxy('attribute', proxyResults[i])\n                    }\n                  }\n\n                  return proxyResults\n                }\n              },\n            }\n          )\n        }\n\n        if (definitions && Array.isArray(definitions)) {\n          for (let i = 0; i < definitions.length; i++) {\n            // Element Handlers\n            if (definitions[i].comment) {\n              let originFn = definitions[i].comment\n              definitions[i].comment = ptr => {\n                return originFn(makeProxy('comment', ptr))\n              }\n            }\n            if (definitions[i].element) {\n              let originFn = definitions[i].element\n              definitions[i].element = ptr => {\n                return originFn(makeProxy('element', ptr))\n              }\n            }\n            if (definitions[i].text) {\n              let originFn = definitions[i].text\n              definitions[i].text = ptr => {\n                return originFn(makeProxy('text', ptr))\n              }\n            }\n\n            // Document Handlers\n            if (definitions[i].doc_comment) {\n              let originFn = definitions[i].doc_comment\n              definitions[i].doc_comment = ptr => {\n                // Uses the same comment proxy as element\n                return originFn(makeProxy('comment', ptr))\n              }\n            }\n            if (definitions[i].doc_text) {\n              let originFn = definitions[i].doc_text\n              definitions[i].doc_text = ptr => {\n                // Uses the same comment text as element\n                return originFn(makeProxy('text', ptr))\n              }\n            }\n            if (definitions[i].doc_type) {\n              let originFn = definitions[i].doc_type\n              definitions[i].doc_type = ptr => {\n                return originFn(makeProxy('doc_type', ptr))\n              }\n            }\n            if (definitions[i].doc_end) {\n              let originFn = definitions[i].doc_end\n              definitions[i].doc_end = ptr => {\n                return originFn(makeProxy('doc_end', ptr))\n              }\n            }\n          }\n        }\n        return definitions\n      }\n    }\n  }\n\n  globalThis.TextDecoder = class TextDecoder {\n    constructor(encoding) {\n      this[Encoding] = encoding || UTF_8\n    }\n\n    // Fatal property setter and getter\n    // Currently not supported.\n    get fatal() {\n      return false\n    }\n    set fatal(value) {\n      if (value) {\n        throw new Error('TextDecoder.fatal is not supported')\n      }\n    }\n\n    decode(buffer) {\n      try {\n        if (supportsMetricsOnTextEncoding) {\n          host.hostcall_metrics_add(WASM_METRIC_TEXT_DECODE_INVOCATION_TOTAL, 1)\n          host.hostcall_metrics_start_timer(WASM_METRIC_TEXT_DECODE_MICROSECONDS_TOTAL)\n        }\n\n        if (!buffer) {\n          return ''\n        }\n\n        const array_buffer = ArrayBuffer.isView(buffer) ? buffer.buffer : buffer\n        if (!(array_buffer instanceof ArrayBuffer)) {\n          throw new Error(\n            `Decoding supported for ArrayBuffer, TypedArray and DataView, not ${typeof buffer}`\n          )\n        }\n\n        return utility.text_decoder_decode(this[Encoding], array_buffer)\n      } finally {\n        if (supportsMetricsOnTextEncoding) {\n          host.hostcall_metrics_stop_timer(WASM_METRIC_TEXT_DECODE_MICROSECONDS_TOTAL)\n        }\n      }\n    }\n  }\n\n  // Converts, if needed, the given value to a string used for encoding.\n  function encode_value_to_string(value) {\n    switch (typeof value) {\n      case 'undefined':\n        // Experimentation in Chrome shows that undefined is treated as zero length string.\n        return ''\n      case 'string':\n        return value\n      default: {\n        if (value === null) {\n          return 'null'\n        }\n        // Works for string, number, boolean, symbol, object, function, etc.\n        return value.toString()\n      }\n    }\n  }\n\n  globalThis.TextEncoder = class TextEncoder {\n    constructor() {}\n\n    encode(str) {\n      try {\n        if (supportsMetricsOnTextEncoding) {\n          host.hostcall_metrics_add(WASM_METRIC_TEXT_ENCODE_INVOCATION_TOTAL, 1)\n          host.hostcall_metrics_start_timer(WASM_METRIC_TEXT_ENCODE_MICROSECONDS_TOTAL)\n        }\n\n        const value = encode_value_to_string(str)\n        if (typeof value !== 'string') {\n          return new Uint8Array(0)\n        }\n\n        return new Uint8Array(utility.text_encoder_encode(value))\n      } finally {\n        if (supportsMetricsOnTextEncoding) {\n          host.hostcall_metrics_stop_timer(WASM_METRIC_TEXT_ENCODE_MICROSECONDS_TOTAL)\n        }\n      }\n    }\n\n    encodeInto(str, array) {\n      try {\n        if (supportsMetricsOnTextEncoding) {\n          host.hostcall_metrics_add(WASM_METRIC_TEXT_ENCODE_INVOCATION_TOTAL, 1)\n          host.hostcall_metrics_start_timer(WASM_METRIC_TEXT_ENCODE_MICROSECONDS_TOTAL)\n        }\n\n        if (!(array instanceof Uint8Array)) {\n          throw new Error('TextEncoder.encodeInto requires an Uint8Array')\n        }\n\n        const value = encode_value_to_string(str)\n        if (array.byteLength === 0 || typeof value !== 'string') {\n          return {\n            read: 0,\n            written: 0,\n          }\n        }\n\n        return utility.text_encoder_encode_into(value, array)\n      } finally {\n        if (supportsMetricsOnTextEncoding) {\n          host.hostcall_metrics_stop_timer(WASM_METRIC_TEXT_ENCODE_MICROSECONDS_TOTAL)\n        }\n      }\n    }\n\n    get encoding() {\n      return UTF_8\n    }\n  }\n\n  /// Value of a rejection that was not otherwise handled and was caught\n  /// by the main execution loop.\n  let unhandled_rejection = null\n\n  /// A map of pending fetches. The key is the request ID. Every time a new\n  /// fetch is issued, it is added to this map. When the fetch is resolved,\n  /// the corresponding entry is removed from the map.\n  let pending_fetches = new Map()\n\n  // Counts the number of times that waitUntil has been used.\n  let wait_until_used_counter = 0\n\n  // Counts the number of times that waitUntil has finished processing.\n  let wait_until_finished_counter = 0\n\n  function expect_number_of_args(args, expected) {\n    if (args.length !== expected) {\n      throw new Error(`Expected ${expected} arguments, got ${args.length}`)\n    }\n  }\n\n  function expect_min_number_of_args(args, expected) {\n    if (args.length < expected) {\n      throw new Error(`Expected at least ${expected} arguments, got ${args.length}`)\n    }\n  }\n\n  function create_context() {\n    // Attach origins to the global space so they can be accessed by the fetch function.\n    globalThis[Origins] = new EdgioSet(ENV_VAR_NAMESPACE_EDGIO_ORIGINS)\n    // Attach the pump function to the global space so it can be accessed by the HtmlTransformer callbacks.\n    globalThis.pump = p => {\n      return manage_main_loop(p, true)\n    }\n    let context = {\n      systemVars: EdgioDict(ENV_VAR_NAMESPACE_EDGIO_CONFIG),\n      environmentVars: EdgioDict(ENV_VAR_NAMESPACE_EDGIO_PROPENVVAR),\n      origins: globalThis[Origins],\n      requestVars: EdgioDict(ENV_VAR_NAMESPACE_EDGIO_USRVAR),\n      geo: EdgioDict(ENV_VAR_NAMESPACE_EDGIO_GEO),\n      device: EdgioDict(ENV_VAR_NAMESPACE_EDGIO_WURFL),\n      client: EdgioDict(ENV_VAR_NAMESPACE_EDGIO_VIRT),\n      metrics: new EdgioMetrics(),\n\n      // NOTE: Normally this is commented out. We only uncomment for testing\n      // featureFlags: EdgioDict(ENV_VAR_NAMESPACE_EDGIO_FEATURE_FLAGS),\n\n      respondWith: function () {\n        throw new Error(\n          'respondWith() has been replaced with `return <response>` from the edge function itself.'\n        )\n      },\n      waitUntil: function (promise) {\n        expect_number_of_args(arguments, 1)\n\n        ++wait_until_used_counter\n        // waitUntil ignores the return value of the promise.\n        // All we care about is that we wait out the promise.\n        Promise.resolve(promise).finally(() => {\n          ++wait_until_finished_counter\n        })\n      },\n    }\n    if (supportsInitClearHostCall) {\n      context.initClear = function () {\n        host.hostcall_init_clear()\n      }\n    }\n    return context\n  }\n\n  function parseCookie(cookie) {\n    const parts = cookie.split('=')\n    // Use trim because sometimes ';' is used and sometimes '; ' is used as cookie delimiter.\n    const key = parts[0].trim()\n    const value = parts[1]\n    return { key, value }\n  }\n\n  // Inject response.headers.set-cookie values into the options.headers.cookie\n  // Returns an array or set-cookie values. (Array is empty if no set-cookies found.)\n  function processSetCookies(options, response) {\n    // Make a dictionary for cookie values so we can deduplicate cookie names\n    let deduplicatedCookies = {}\n\n    // Start with any existing cookie values and populate cookieValues\n    const existingCookies = options.headers.cookie\n    if (existingCookies) {\n      const individualCookies = existingCookies.split(';')\n      for (let i = 0; i < individualCookies.length; i++) {\n        const { key, value } = parseCookie(individualCookies[i])\n        deduplicatedCookies[key] = value\n      }\n    }\n\n    // get setCookies and ensure it is an array so we can iterate on it.\n    let setCookies = response.headers.get('set-cookie') || []\n    if (!Array.isArray(setCookies)) {\n      setCookies = [setCookies]\n    }\n\n    for (let i = 0; i < setCookies.length; i++) {\n      // TODO: Do we need to honor SameSite=, Path= and Http(s)Only?\n      const { key, value } = parseCookie(setCookies[i].split(';')[0])\n      deduplicatedCookies[key] = value\n    }\n\n    // Assemble the new cookie: header if there are any cookies\n    const keys = Object.keys(deduplicatedCookies)\n    if (keys.length > 0) {\n      options.headers.cookie = ''\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        const value = deduplicatedCookies[key]\n        options.headers.cookie += `${key}=${value}${i < keys.length - 1 ? '; ' : ''}`\n      }\n    }\n  }\n\n  // redirect =\n  //   - \"follow\" - Make a new fetch to follow any redirect responses (cookies/set-cookies are honored on redirect)\n  //   - \"manual\" - Return the result. This is not per Fetch API standard but it's useless to return an opaque response object in functions.\n  //   - \"error\" - Throws exception on any redirect responses\n  // Return an error when the total # of redirects exceeds MAX_REDIRECTS\n  async function handleRedirect(originalUrl, options, redirectedCount, response) {\n    // If the response is not a redirect, or there is no location header, resolve the promise normally\n    const location = response.headers.get('location')\n    if ([301, 302, 303, 307, 308].indexOf(response.status) < 0 || !location) {\n      response[Url] = originalUrl\n      response.redirected = redirectedCount > 0\n      return response\n    }\n\n    const redirect = options.redirect\n    if (redirect === 'error') {\n      throw new Error('redirect')\n    }\n\n    if (redirect === 'manual') {\n      // Contrary to specs which was written for browsers, we behave like node-fetch and return\n      // a response rather than an opaque redirect object.\n      return response\n    }\n\n    ++redirectedCount\n\n    // Redirects forward all the original request headers to the redirect request headers via 'options'\n    // Redirects aggregate the original response set-cookies and sends them as 'cookie' to the redirect request headers.\n    processSetCookies(options, response)\n\n    // Issue a new request that follows the redirect\n    const newResponse = await issueFetch(location, options, redirectedCount)\n    return newResponse\n  }\n\n  // Implementation of https://developer.mozilla.org/en-US/docs/Web/API/fetch\n  async function issueFetch(urlOrRequest, options, redirectedCount) {\n    let req\n    if (urlOrRequest instanceof Request) {\n      req = urlOrRequest\n    } else {\n      // According to the spec fetch() takes a string, a request Object or any\n      // other object that can be converted to a string.\n      if (typeof urlOrRequest !== 'string') {\n        if (\n          typeof urlOrRequest.toString !== 'function' ||\n          urlOrRequest.toString() === '[object Object]'\n        ) {\n          throw new Error(\n            'Invalid \"url\" argument in fetch() function. The \"url\" argument ' +\n              'must be a string, a Request object, or an object where toString() returns the url.'\n          )\n        }\n        urlOrRequest = urlOrRequest.toString()\n      }\n      // globalThis.fetch() and handleRedirect() ensure options always exists.\n      req = new Request(urlOrRequest, options)\n    }\n\n    // Ensure the fetch includes the minimum required fetch options\n    if (!options.edgio || !options.edgio.origin) {\n      throw new Error(`edgio.origin must be included in the fetch options for ${urlOrRequest}`)\n    }\n\n    // Ensure that the request body is on the host.\n    await req[MoveBodyToHost]()\n\n    // Set the provided fetch origin\n    const origin = options.edgio.origin\n    try {\n      host.hostcall_req_set_fetch_origin(req.edgioId, origin)\n    } catch {\n      throw new Error(\n        `Invalid edgio.origin: \"${origin}\". Must be one of: ${globalThis[Origins].keys().join(\n          ', '\n        )}`\n      )\n    }\n\n    //\n    // Map the various fetch options to the hostcall_req_* functions\n    //\n\n    // Helper functions for parsing fetch options\n    function getOptionInt(options, field, msg) {\n      const value = options[field]\n      if (value !== undefined) {\n        const iValue = parseInt(value)\n        if (isNaN(iValue)) {\n          throw new Error(`Invalid '${field}' value '${value}' specified. ${msg}`)\n        }\n        return iValue\n      }\n    }\n\n    // Set the fetch timeout, if provided\n    const timeout = getOptionInt(\n      options.edgio,\n      'timeout',\n      'Expected timeout in milliseconds as an integer.'\n    )\n    if (timeout !== undefined) {\n      try {\n        host.hostcall_req_set_fetch_timeout(req.edgioId, timeout)\n      } catch {\n        throw new Error(`Failed to set fetch timeout on request.`)\n      }\n    }\n\n    // If there are no options.edgio.caching, we skip this whole section.\n    // Same thing happens if the host does not support the new fetch options.\n    const caching = options.edgio.caching\n    if (supportsEapps409FetchOptions && caching) {\n      const bypass_cache = caching.bypass_cache\n      if (bypass_cache !== undefined) {\n        host.hostcall_req_set_fetch_bypass_cache(req.edgioId, !!bypass_cache)\n      }\n\n      if (caching.cache_key_query_string) {\n        const exclude_all = caching.cache_key_query_string.exclude_all\n        if (exclude_all !== undefined) {\n          host.hostcall_req_set_fetch_ckqs_exclude_all(req.edgioId, !!exclude_all)\n        }\n\n        const include_all = caching.cache_key_query_string.include_all\n        if (include_all !== undefined) {\n          host.hostcall_req_set_fetch_ckqs_include_all(req.edgioId, !!include_all)\n        }\n      } // if (caching.cache_key_query_string)\n\n      if (caching.max_age !== undefined) {\n        host.hostcall_req_set_fetch_max_age(req.edgioId, caching.max_age.toString())\n      }\n\n      if (supportsEapps563FetchTagUpsert) {\n        if (caching.tags !== undefined) {\n          host.hostcall_req_set_fetch_cache_tags(req.edgioId, caching.tags.toString())\n        }\n      }\n\n      if (caching.stale_while_revalidate !== undefined) {\n        host.hostcall_req_set_fetch_stale_while_revalidate(\n          req.edgioId,\n          caching.stale_while_revalidate.toString()\n        )\n      }\n    } // if (options.edgio.caching)\n\n    // Start the async fetch\n    host.hostcall_req_fetch_async(req.edgioId)\n\n    // Create a new promise and capture its resolve and reject\n    // functions so that we can invoke them from the outside.\n    let resolve\n    let reject\n    const promise = new Promise((promise_resolve, promise_reject) => {\n      resolve = promise_resolve\n      reject = promise_reject\n    })\n\n    // Add the promise to the list of pending promises\n    pending_fetches.set(req.edgioId, {\n      promise,\n      resolve,\n      reject,\n    })\n\n    // After this await, the original `Request` object is no longer valid in the host,\n    // and must not be used again. Because of this, we have to copy any fields we need available\n    // after this call.\n    const request_url = req.url\n    const response = await promise\n\n    return handleRedirect(request_url, options, redirectedCount, response)\n  }\n\n  globalThis.fetch = async function (urlOrRequest, options) {\n    expect_min_number_of_args(arguments, 1)\n\n    // Validate the options. Ensure .redirect and .headers exist\n    options = options || {}\n    if (!options.redirect) {\n      options.redirect = 'follow'\n    }\n    if (!options.headers) {\n      options.headers = {}\n    }\n    if (!options.edgio) {\n      options.edgio = {}\n    }\n    const validRedirects = ['error', 'follow', 'manual']\n    if (validRedirects.indexOf(options.redirect) < 0) {\n      throw new Error(\n        `redirect must be one of \"${validRedirects.join(', ')}\", not \"${options.redirect}\"`\n      )\n    }\n\n    // All fetches must specify an explicit origin (for now).\n    if (!options.edgio.origin) {\n      throw new Error(\n        `edgio.origin must be specified as a fetch option. Must be one of: ${globalThis[\n          Origins\n        ].keys().join(',')}`\n      )\n    }\n\n    return issueFetch(urlOrRequest, options, 0)\n  }\n\n  // If the user defined Router.edge_function_init_script then we run this code\n  // during the initialization phase of the SDK. Router.edge_function_init_script\n  // is translated to an edge function w/ a path '__edge_function_init_script__'\n  // and a function signature of handleHttpInit(context).\n  const getEdgeFunction = edgeFunctions.get('__edge_function_init_script__')\n  if (getEdgeFunction) {\n    const edgeInitFunction = getEdgeFunction()\n    if (typeof edgeInitFunction !== 'function') {\n      throw new Error(\n        'Edge Initialization Function specified by Router option \"edge_function_init_script\" ' +\n          'must have a named export \"handleHttpInit\". See ' +\n          'https://docs.edg.io/guides/v7/edge-functions#defining-edge-functions for more information.'\n      )\n    }\n    const context = create_context()\n    const init_promise = Promise.resolve(edgeInitFunction.bind(globalThis)(context))\n    manage_main_loop(init_promise, true)\n  }\n\n  // EdgeFunction main function. This function is invoked on every request.\n  // We return it from the SDK initialization closure because the closure\n  // is called only once and hides all the implementation details from\n  // the end developer code.\n  return function main(edgioRequestId) {\n    // Get the user function from the edge functions map as generated during the bundling.\n    const context = create_context()\n    const path = context.systemVars['__EDGE_FUNCTION_PATH__']\n    const getEdgeFunction = edgeFunctions.get(path)\n    if (!getEdgeFunction) {\n      throw new Error(`No edge function found for path: ${path}`)\n    }\n    // The EdgeFunction syntax is: export async function handleHttpRequest(request, context) { }\n    const edgeFunction = getEdgeFunction()\n    if (typeof edgeFunction !== 'function') {\n      throw new Error(\n        'Edge Function must have a named export \"handleHttpRequest\". See https://docs.edg.io/guides/v7/edge-functions#defining-edge-functions for more information.'\n      )\n    }\n\n    const req = new Request(null, {\n      edgio: {\n        id: edgioRequestId,\n      },\n    })\n\n    // The EdgeFunction syntax is: export async function handleHttpRequest(request, context) { }\n    // Use Promise.resolve() to promisify the value. If the value is already a promise, this is a no-op.\n    const main_promise = Promise.resolve(edgeFunction.bind(globalThis)(req, context))\n    manage_main_loop(main_promise, false)\n  }\n\n  function manage_main_loop(main_promise, is_init_function) {\n    // The state of the main promise. This is used as one of the signals to determine if we should stop the main loop.\n    let waiting_on_main_promise = true\n    const logPrefix = `sdk.js(${is_init_function ? 'handleHttpInit' : 'handleHttpRequest'}): `\n    host.hostcall_debug(`${logPrefix}start main loop`)\n\n    main_promise\n      .then(async response => {\n        if (is_init_function) {\n          // handleHttpInit must not return a value or a promise.\n          if (response !== undefined) {\n            host.hostcall_debug(`${logPrefix}return with non-undefined value, throwing exception`)\n            throw new Error(\n              `The handleHttpInit function must not return a value or a Promise (got ${typeof response})`\n            )\n          }\n          host.hostcall_debug(`${logPrefix}return with undefined (as expected)`)\n        } else {\n          // handleHttpRequest must return a Response or a Promise resolving to a Response.\n          if (!(response instanceof Response)) {\n            host.hostcall_debug(`${logPrefix}return with non-Response object, throwing exception`)\n            throw new Error(\n              `The handleHttpRequest function must return a Response or a Promise resolving to a Response (got ${typeof response})`\n            )\n          }\n\n          host.hostcall_debug(`${logPrefix}return with response object, sending it to client`)\n          await response[SendToClient]()\n        }\n      })\n      .catch(err => {\n        // TODO: Per https://jira.atlas.llnw.com/browse/EAPPS-208\n        // we must handle the rejected promises by using the provided\n        // QuickJS API, not in our own JavaScript code which might have\n        // errors of its own. To emulate the silent rejection, throw\n        // an exception in `globalThis.fetch` and then throw again\n        // in this method.\n        unhandled_rejection = err\n      })\n      .finally(() => {\n        waiting_on_main_promise = false\n      })\n\n    // Jobs are pending if:\n    // * Waiting on the main promise OR\n    // * There are more pending waitUntil promises\n    // This means that even if there are pending fetches, we should stop running.\n    function jobs_are_pending() {\n      return waiting_on_main_promise || wait_until_finished_counter < wait_until_used_counter\n    }\n\n    // This is the main loop that is executing pending jobs and pending promises.\n    // It:\n    // * Executes pending synchronous QuickJS jobs if there are any.\n    // * Waits for the main promise to resolve if it is still pending.\n    // * Evaluates if there are unhanded rejections and if so, throws them.\n    // * Waits on pending fetches if there are any.\n    /*eslint no-constant-condition: off*/\n    while (jobs_are_pending()) {\n      host.hostcall_debug(`${logPrefix}Executing pending jobs...`)\n\n      // Executes all the currently pending jobs inside of the QuickJS runtime.\n      // This may setup new pending fetches which is why we execute it before checking\n      // if there are any more pending fetches left. If an exception is thrown, this\n      // will short-circuit and return the error.\n      utility.execute_pending()\n\n      // If there is an unhandled rejection, throw it in the main loop so that\n      // it propagates to the host.\n      if (unhandled_rejection) {\n        const err = unhandled_rejection\n        unhandled_rejection = null\n        throw err\n      }\n\n      if (pending_fetches.size > 0) {\n        // Wait for the next ready response. This call blocks.\n        const [is_response, req_id, resp_id_or_err_code] = host.hostcall_resp_await_next()\n\n        host.hostcall_debug(\n          `${logPrefix}hostcall_resp_await_next: is_response(${is_response}), req_id(${req_id}), resp_id_or_err_code(${resp_id_or_err_code})`\n        )\n\n        // Get the pending request that has a ready response.\n        const pending_fetch = pending_fetches.get(req_id)\n        if (!pending_fetch) {\n          throw new Error(`${logPrefix}No pending fetch for ID ${req_id}`)\n        }\n        pending_fetches.delete(req_id)\n\n        // Resolve or reject the promise of the pending request based on\n        // the is_response flag.\n        const { resolve, reject } = pending_fetch\n        if (is_response) {\n          host.hostcall_debug(`${logPrefix}creating Response`)\n          const resp = new Response(null, {\n            edgio: {\n              id: resp_id_or_err_code,\n            },\n          })\n          resolve(resp)\n        } else {\n          host.hostcall_debug(`${logPrefix}creating ResponseError`)\n          const err = new ResponseError(resp_id_or_err_code)\n          reject(err)\n        }\n      }\n    }\n    host.hostcall_debug(`${logPrefix}no more pending jobs`)\n  }\n}\n", "// This file is used as template for the __edge-functions__.js file.\n// This template is also used by fiddle to run the edge functions in the browser.\n\n// Connascence of convention with the quickjs-runtime invocation protocol.\n// In v2 quickjs-runtime invokes the single exported function passing its\n// runtime object (used to interact with the Wasm host)\n// We only export a function in order to hide all the implementation details\n// that would otherwise get exported. But in order to signal the version\n// we have to attach the property `version` to the function. We do all\n// this in the closure below which we immediately execute to get the final module.exports.\nmodule.exports = (() => {\n  // The runtime_init function is the entrypoint for initialization.\n  // It is called by the quickjs-runtime when the module is loaded\n  // and then the result of its execution is the `run` function that is\n  // invoked on every edge function execution. The 2nd argument is the\n  // v1 protocol request ID which is only used if the quickjs-runtime is\n  // v1 and it is not even passed in v2.\n  const runtime_init = function (runtime, v1EdgioRequestId) {\n    // During the build of @edgio/core, the sdk is bundled into the template.\n    const sdk = require('../../../src/runtime/edge-functions/sdk.js')\n\n    // All the edge functions are bundled into a single map for fast lookup.\n    // The map is inserted on this place during the build process.\n    const edgeFunctions = '__INSERT_EDGE_FUNCTIONS_MAP_HERE__'\n\n    // Initialize the SDK with the runtime and get the run function.\n    const run = sdk(runtime, edgeFunctions)\n    if (typeof run !== 'function') {\n      throw new Error('The SDK was not initialized correctly.')\n    }\n\n    // If the runtime object has no version, it means that we are running inside of\n    // quickjs-runtime that does not support the protocol v2. In this case we fall back\n    // on the protocol v1 and run the function immediately.\n    if (typeof runtime.version === 'undefined') {\n      if (typeof v1EdgioRequestId !== 'number') {\n        throw new Error('The runtime object is missing both the version and the request ID.')\n      }\n\n      // In v1 quickjs-runtime does not expect any return value from the run.\n      run(v1EdgioRequestId)\n      return\n    }\n\n    // Return the run function to be invoked by the quickjs-runtime on every edge function execution.\n    return run\n  }\n  // The version of the quickjs-runtime invocation protocol.\n  // By injecting the version, we can signal to the quickjs-runtime what is the\n  // version of the protocol that we are using so that it can adapt its behavior.\n  runtime_init.version = 2\n  return runtime_init\n})()\n"],
  "mappings": "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",
  "names": ["require_consts", "__commonJSMin", "exports", "module", "require_symbols", "__commonJSMin", "exports", "module", "require_bundled_object_inspect", "__commonJSMin", "exports", "module", "Et", "t", "e", "et", "U", "N", "I", "rt", "K", "C", "L", "nt", "$t", "w", "Mt", "E", "Wt", "at", "It", "Lt", "_t", "Rt", "Q", "s", "kt", "it", "gt", "ot", "u", "qt", "ft", "z", "B", "F", "m", "o", "vt", "lt", "ut", "n", "a", "i", "r", "H", "ct", "pt", "ht", "y", "c", "v", "dt", "f", "p", "_", "V", "S", "Yt", "mt", "l", "h", "M", "wt", "tt", "yt", "G", "Ft", "X", "W", "Y", "O", "Qt", "d", "R", "$", "St", "At", "k", "Xt", "J", "Dt", "q", "Ht", "Z", "st", "Ut", "x", "Vt", "P", "Kt", "Jt", "Ct", "Pt", "Bt", "Nt", "Tt", "A", "b", "T", "j", "g", "Ot", "D", "zt", "Gt", "require_readable_stream", "__commonJSMin", "exports", "module", "Chunks", "Controller", "Done", "ErrorState", "PendingNextPromise", "PendingNextPromiseReject", "PendingNextPromiseResolve", "QueuingStrategy", "Stream", "UnderlyingSource", "promisify", "fn", "args", "resolve", "reject", "err", "ReadableStreamDefaultController", "stream", "data", "error", "ReadableByteStreamController", "ReadableStream", "underlyingSource", "queuingStrategy", "nextChunk", "nextValue", "require_edgio_readable_stream_reader", "__commonJSMin", "exports", "module", "BodyReadOffset", "Done", "EdgioId", "GetBody", "GetBodyChunkFn", "MoveBodyToHost", "ReqOrRespObject", "BodyUsed", "INTERNAL_ERROR_PREFIX", "getEdgioReadableStreamReader", "host", "feature_flags", "EdgioReadableResponseStreamReader", "EdgioReadableRequestStreamReader", "EdgioReadableStreamReader", "reqOrRespObject", "getBodyChunkFn", "rawChunk", "response", "request", "id", "getBodyFn", "body", "require_sdk", "__commonJSMin", "exports", "module", "runtime", "edgeFunctions", "host", "utility", "feature_flags", "STDOUT_FD", "STDERR_FD", "ENV_VAR_NAMESPACE_EDGIO_CONFIG", "ENV_VAR_NAMESPACE_EDGIO_ORIGINS", "ENV_VAR_NAMESPACE_EDGIO_PROPENVVAR", "ENV_VAR_NAMESPACE_EDGIO_FEATURE_FLAGS", "ENV_VAR_NAMESPACE_EDGIO_USRVAR", "ENV_VAR_NAMESPACE_EDGIO_GEO", "ENV_VAR_NAMESPACE_EDGIO_WURFL", "ENV_VAR_NAMESPACE_EDGIO_VIRT", "UTF_8", "WASM_METRIC_JSON_PARSE_INVOCATION_TOTAL", "WASM_METRIC_JSON_STRINGIFY_INVOCATION_TOTAL", "WASM_METRIC_JSON_PARSE_MICROSECONDS_TOTAL", "WASM_METRIC_JSON_STRINGIFY_MICROSECONDS_TOTAL", "WASM_METRIC_TEXT_ENCODE_INVOCATION_TOTAL", "WASM_METRIC_TEXT_DECODE_INVOCATION_TOTAL", "WASM_METRIC_TEXT_ENCODE_MICROSECONDS_TOTAL", "WASM_METRIC_TEXT_DECODE_MICROSECONDS_TOTAL", "INTERNAL_ERROR_PREFIX", "AppendFn", "Body", "BodyOnHost", "BodyUsed", "CheckFn", "EdgioId", "Encoding", "ErrorCode", "GetFn", "KeysFn", "MoveBodyToHost", "Namespace", "Options", "Origins", "Redirected", "RemoveFn", "ReqRespHeaders", "RequestObject", "ResponseObject", "SendToClient", "SetFn", "Url", "supportsBodyChunkHostcalls", "supportsEapps409FetchOptions", "supportsInitClearHostCall", "supportsEapps563FetchTagUpsert", "supportsHtmlTransformer", "sailfishFeatureFlags", "EdgioDict", "supportsMetricsOnTextEncoding", "inspect", "consoleGroupIndentDepth", "CONSOLE_GROUP_INDENT_STEP", "getConsoleIndent", "wrappedConsoleWrite", "fdWrite", "args", "firstArg", "match", "arg", "i", "type", "consoleWrite", "fd", "e", "consoleCounters", "condition", "label", "data", "columns", "ReadableStream", "EdgioReadableResponseStreamReader", "EdgioReadableRequestStreamReader", "EdgioReadableResponseStream", "response", "EdgioReadableRequestStream", "request", "EdgioHeaders", "id", "headers", "appendFn", "checkFn", "getFn", "keysFn", "removeFn", "setFn", "h", "rawHeaders", "name", "value", "key", "v", "entries", "callback", "values", "json", "EdgioResponseHeaders", "responseId", "EdgioRequestHeaders", "requestId", "HeadersInternal", "_requestId", "_headersInstance", "input", "options", "_a", "_b", "_c", "url", "method", "body", "buffer", "uri", "clone_id", "req", "edgioId", "chunk", "optionsOrResponse", "clone", "status", "newRedirected", "resp", "ResponseError", "responseErrorCode", "namespace", "namespaces", "target", "property", "_target", "_key", "_descriptor", "_property", "EdgioSet", "EdgioMetrics", "index", "wrapFunctionCallWithMetrics", "invocationCountId", "microsecondTimerId", "fn", "originalJSONparse", "originalJSONstringify", "moduleName", "HtmlTransformer", "definitions", "output_callback", "resolve", "reject", "makeProxy", "className", "rawPtr", "proxyResults", "originFn", "ptr", "encoding", "array_buffer", "encode_value_to_string", "str", "array", "unhandled_rejection", "pending_fetches", "wait_until_used_counter", "wait_until_finished_counter", "expect_number_of_args", "expected", "expect_min_number_of_args", "create_context", "p", "manage_main_loop", "context", "promise", "parseCookie", "cookie", "parts", "processSetCookies", "deduplicatedCookies", "existingCookies", "individualCookies", "setCookies", "keys", "handleRedirect", "originalUrl", "redirectedCount", "location", "redirect", "issueFetch", "urlOrRequest", "origin", "getOptionInt", "field", "msg", "iValue", "timeout", "caching", "bypass_cache", "exclude_all", "include_all", "promise_resolve", "promise_reject", "request_url", "validRedirects", "getEdgeFunction", "edgeInitFunction", "init_promise", "edgioRequestId", "path", "edgeFunction", "main_promise", "is_init_function", "waiting_on_main_promise", "logPrefix", "err", "jobs_are_pending", "is_response", "req_id", "resp_id_or_err_code", "pending_fetch", "runtime_init", "runtime", "v1EdgioRequestId", "run"]
}
