"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const MockRequest_1 = __importDefault(require("../MockRequest"));
const MockResponse_1 = __importDefault(require("../MockResponse"));
const isString_1 = __importDefault(require("../../utils/isString"));
/**
 * Creates a mock Request and Response object the router will
 * consume when running the specified request
 * @param options
 * @returns
 */
function createRouteMock(options) {
    const requestOptions = {};
    if ((0, isString_1.default)(options)) {
        Object.assign(requestOptions, { path: options });
    }
    else {
        Object.assign(requestOptions, options);
    }
    // this function is used for simple tests with path only, and we still have to have a valid url for mock request
    // we need to fix this better in the future - LambdaRequest allows for specifying only parts of url
    const url = 'https://jest.origin.moovweb.com' + requestOptions.path;
    const request = new MockRequest_1.default(url, requestOptions);
    const response = new MockResponse_1.default({ request });
    return { request, response };
}
exports.default = createRouteMock;
