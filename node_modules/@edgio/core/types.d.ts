/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export type Hostname = string;
export type Rules = Matches | Features | Features[];
export type DeviceAttributes = 'device_os' | 'brand_name' | 'dual_orientation' | 'html_preferred_dtd' | 'image_inlining' | 'is_android' | 'is_app' | 'is_full_desktop' | 'is_ios' | 'is_robot' | 'is_smartphone' | 'is_smarttv' | 'is_tablet' | 'is_touchscreen' | 'is_windows_phone' | 'is_wireless_device' | 'marketing_name' | 'mobile_browser' | 'model_name' | 'progressive_download' | 'release_date' | 'resolution_height' | 'resolution_width';
export type EdgeFunction = string;
export type Comment = string;
export type HttpStatusCode = 200 | 201 | 202 | 203 | 204 | 205 | 206 | 207 | 208 | 226 | 300 | 301 | 302 | 304 | 305 | 306 | 307 | 308 | 400 | 401 | 402 | 403 | 404 | 405 | 406 | 407 | 408 | 409 | 410 | 411 | 412 | 413 | 414 | 415 | 416 | 417 | 418 | 421 | 422 | 423 | 424 | 425 | 426 | 428 | 429 | 431 | 440 | 444 | 451 | 499 | 500 | 501 | 502 | 503 | 504 | 505 | 506 | 507 | 508 | 509 | 510 | 511 | 530 | 531 | 532 | 533 | 534 | 535 | 536 | 537 | 538 | 539 | 540 | 541 | 542 | 543 | 544 | 545 | 546 | 547 | 548 | 549 | 888 | 893;
/**
 * This interface was referenced by `HttpRequestHeader`'s JSON-Schema definition
 * via the `patternProperty` "^[+]?[-_a-zA-Z0-9 .]+$".
 *
 * This interface was referenced by `SetVariables`'s JSON-Schema definition
 * via the `patternProperty` "^[-_a-zA-Z0-9]+$".
 *
 * This interface was referenced by `EnvironmentVariables`'s JSON-Schema definition
 * via the `patternProperty` "^[-_a-zA-Z0-9]+$".
 */
export type SingleLineString = string;
export type HeaderTreatment = 'pass' | 'overwrite' | 'if_missing' | 'remove';
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^[1-5][0-9][0-9]$".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^[1-5][0-9][0-9]$".
 */
export type TimeInterval = string;
export type HeaderName = string;
export type GenericField = string;
export type Bytes = string;
export interface EdgeControl {
    /**
     * @minItems 1
     */
    properties: [Property, ...Property[]];
    rules?: Rules[];
    rtld?: Rtld;
    experiments?: Experiment[];
}
export interface Property {
    name: string;
    /**
     * @minItems 1
     * @maxItems 100
     */
    origins: [Origins, ...Origins[]];
    /**
     * @minItems 1
     */
    hostnames: [Hostnames, ...Hostnames[]];
    rules?: Rules[];
    edge_functions?: EdgeFunctions;
    environment_variables?: EnvironmentVariables;
}
export interface Origins {
    name?: string;
    type?: 'customer_origin' | 'cdn_storage';
    hosts?: OriginBackends[];
    balancer?: 'primary_failover' | 'round_robin' | 'carp' | 'carp64' | 'static_with_tags' | 'static_weighted' | 'static_nocache_bypass' | 'sqf';
    override_host_header?: string;
    shields?: {
        global?: string;
        apac?: string;
        emea?: string;
        us_west?: string;
        us_east?: string;
    };
    pci_certified_shields?: boolean;
    tls_verify?: {
        use_sni?: boolean;
        sni_hint_and_strict_san_check?: Hostname;
        allow_self_signed_certs?: boolean;
        /**
         * @maxItems 5
         */
        pinned_certs?: [] | [string] | [string, string] | [string, string, string] | [string, string, string, string] | [string, string, string, string, string];
    };
}
export interface OriginBackends {
    weight?: number;
    dns_max_ttl?: number;
    dns_preference?: 'prefv4' | 'prefv6' | 'onlyv4' | 'onlyv6';
    max_hard_pool?: number;
    dns_min_ttl?: number;
    location: [] | [
        {
            port?: number;
            hostname: Hostname;
        }
    ] | [
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        }
    ] | [
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        }
    ] | [
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        }
    ] | [
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        }
    ] | [
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        }
    ] | [
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        }
    ] | [
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        }
    ] | [
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        }
    ] | [
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        },
        {
            port?: number;
            hostname: Hostname;
        }
    ] | [] | [Hostname] | [Hostname, Hostname] | [Hostname, Hostname, Hostname] | [Hostname, Hostname, Hostname, Hostname] | [Hostname, Hostname, Hostname, Hostname, Hostname] | [Hostname, Hostname, Hostname, Hostname, Hostname, Hostname] | [Hostname, Hostname, Hostname, Hostname, Hostname, Hostname, Hostname] | [Hostname, Hostname, Hostname, Hostname, Hostname, Hostname, Hostname, Hostname] | [Hostname, Hostname, Hostname, Hostname, Hostname, Hostname, Hostname, Hostname, Hostname] | [
        Hostname,
        Hostname,
        Hostname,
        Hostname,
        Hostname,
        Hostname,
        Hostname,
        Hostname,
        Hostname,
        Hostname
    ] | Hostname;
    max_pool?: number;
    balancer?: 'carp' | 'sqf' | 'primary_failover' | 'round_robin';
    scheme?: 'http' | 'https' | 'match';
}
export interface Hostnames {
    hostname: Hostname;
    default_origin_name?: string;
    report_code?: number;
    tls?: {
        npn?: boolean;
        alpn?: boolean;
        protocols?: string;
        use_sigalgs?: boolean;
        sni?: boolean;
        sni_strict?: boolean;
        sni_host_match?: boolean;
        client_renegotiation?: boolean;
        options?: string;
        cipher_list?: string;
        named_curve?: string;
        oscp?: boolean;
        pem?: string;
        ca?: string;
    };
}
export interface Matches {
    /**
     * @minItems 2
     */
    if?: [
        Matches | Boolean | Conditionals | Features | (Features | Matches)[],
        Matches | Boolean | Conditionals | Features | (Features | Matches)[],
        ...(Matches | Boolean | Conditionals | Features | (Features | Matches)[])[]
    ];
    comment?: string;
}
export interface Boolean {
    /**
     * @minItems 2
     * @maxItems 28
     *
     * This interface was referenced by `Boolean`'s JSON-Schema definition
     * via the `patternProperty` "^(or|and)$".
     */
    [k: string]: [Boolean | Conditionals, Boolean | Conditionals, ...(Boolean | Conditionals)[]];
}
export interface Conditionals {
    /**
     * @minItems 2
     * @maxItems 2
     *
     * This interface was referenced by `Conditionals`'s JSON-Schema definition
     * via the `patternProperty` "^(==|!=|===|!==)$".
     * @minItems 2
     * @maxItems 3
     *
     * This interface was referenced by `Conditionals`'s JSON-Schema definition
     * via the `patternProperty` "^(<|<=)$".
     * @minItems 2
     * @maxItems 2
     *
     * This interface was referenced by `Conditionals`'s JSON-Schema definition
     * via the `patternProperty` "^(>|>=)$".
     * @minItems 2
     *
     * This interface was referenced by `Conditionals`'s JSON-Schema definition
     * via the `patternProperty` "^(in|not_in)$".
     * @minItems 2
     *
     * This interface was referenced by `Conditionals`'s JSON-Schema definition
     * via the `patternProperty` "^(=~|!~)$".
     */
    [k: string]: [(number | string | boolean) | RulesVariables, (number | string | boolean) | RulesVariables] | [RulesVariables | number, RulesVariables | number] | [RulesVariables | number, RulesVariables | number, RulesVariables | number] | [RulesVariables | number, RulesVariables | number] | [
        RulesVariables | (string | unknown[]),
        RulesVariables | (string | unknown[]),
        ...(RulesVariables | (string | unknown[]))[]
    ] | [
        RulesVariables | (string | number),
        RulesVariables | (string | number),
        ...(RulesVariables | (string | number))[]
    ];
}
export interface RulesVariables {
    request?: 'client_ip' | 'referring_domain' | 'method' | 'scheme' | 'origin_path' | 'origin_query_string' | 'pop_code' | 'path' | 'query' | 'querystring';
    'request.path'?: 'directory' | 'filename' | 'extension';
    'request.origin_query'?: string;
    'request.cookie'?: string;
    'request.header'?: string;
    random?: number;
    location?: 'asn' | 'city' | 'continent' | 'country' | 'dma_code' | 'latitude' | 'longitude' | 'postal_code' | 'region_code' | 'metro_code';
    variable?: 'is_origin_shield' | 'usrvar_enable_debug' | 'usrvar_enable_sf_debug' | 'usrvar_enable_options_resp' | 'usrvar_options' | 'status' | 'country_code';
    pop_code?: string;
    device?: DeviceAttributes;
    response?: 'status_code';
}
export interface Features {
    edge_function?: EdgeFunction;
    comment?: Comment;
    access?: Access;
    caching?: Caching;
    response?: Response;
    headers?: Headers;
    logs?: Logs;
    origin?: Origin;
    url?: Url;
    client?: Client;
    set_variables?: SetVariables;
}
export interface Access {
    deny_access?: boolean;
    token_auth_denial_code?: HttpResponseNoBody;
    token_auth_ignore_url_case?: boolean;
    token_auth?: boolean;
    [k: string]: unknown;
}
export interface HttpResponseNoBody {
    code?: HttpStatusCode;
    headers?: HttpResponseHeader;
}
export interface HttpResponseHeader {
    /**
     * This interface was referenced by `HttpResponseHeader`'s JSON-Schema definition
     * via the `patternProperty` "^[+]?[-_a-zA-Z0-9 .]+$".
     * This interface was referenced by `HttpResponseHeader`'s JSON-Schema definition
     * via the `patternProperty` "^(Accept-Ranges|Age|Connection|Content-Encoding|Content-Length|Content-Range|Date|Server|Trailer|Transfer-Encoding|Upgrade|Vary|Via|Warning|X-EC.*)$".
     */
    [k: string]: (SingleLineString | RulesVariables) | null;
}
export interface Caching {
    bandwidth_throttling?: {
        kbytes_per_sec: number;
        prebuf_seconds?: number;
    };
    bypass_cache?: boolean;
    cache_control_header_treatment?: HeaderTreatment;
    expires_header_treatment?: HeaderTreatment;
    client_max_age?: TimeInterval;
    cache_key_query_string?: {
        include_all?: boolean;
        exclude_all?: boolean;
        include?: string[];
        include_all_except?: string[];
    };
    cache_key_rewrite?: RegexRewrite;
    cache_key?: {
        include_all_query_params?: boolean;
        exclude_all_query_params?: boolean;
        /**
         * @minItems 1
         */
        include_query_params?: [string, ...string[]];
        /**
         * @minItems 1
         */
        include_all_query_params_except?: [string, ...string[]];
        /**
         * @minItems 1
         */
        include_headers?: [HeaderName, ...HeaderName[]];
        /**
         * @minItems 1
         */
        include_cookies?: [HeaderName, ...HeaderName[]];
        /**
         * @minItems 1
         */
        include_expressions?: [SingleLineString, ...SingleLineString[]];
    };
    max_age?: TimeInterval | {
        /**
         * This interface was referenced by `undefined`'s JSON-Schema definition
         * via the `patternProperty` "^[1-5][0-9][0-9]$".
         *
         * This interface was referenced by `undefined`'s JSON-Schema definition
         * via the `patternProperty` "^[1-5][0-9][0-9]$".
         */
        [k: string]: TimeInterval;
    };
    h264_support?: string[];
    h264_support_video_seek_params?: {
        seek_start: GenericField;
        seek_end?: GenericField;
    };
    honor_no_cache_request_header?: boolean;
    ignore_origin_no_cache?: HttpStatusCode[];
    ignore_unsatisfiable_ranges?: boolean;
    revalidate_after_origin_unavailable?: TimeInterval | {
        /**
         * This interface was referenced by `undefined`'s JSON-Schema definition
         * via the `patternProperty` "^[1-5][0-9][0-9]$".
         *
         * This interface was referenced by `undefined`'s JSON-Schema definition
         * via the `patternProperty` "^[1-5][0-9][0-9]$".
         */
        [k: string]: TimeInterval;
    };
    partial_cache_sharing_min_hit_size?: number;
    prevalidate_cached_content?: TimeInterval;
    refresh_zero_byte_cache_files?: boolean;
    cacheable_status_codes?: HttpStatusCode[];
    stale_on_error?: boolean;
    stale_while_revalidate?: TimeInterval;
    enable_caching_for_methods?: ('GET' | 'POST' | 'PUT')[];
    cacheable_request_body_size?: Bytes;
    revalidate_while_stale_timer?: number;
    bypass_client_cache?: boolean;
    service_worker_max_age?: TimeInterval;
    allow_empty_query_in_cache_key?: boolean;
    first_hit_caching?: boolean;
    [k: string]: unknown;
}
export interface RegexRewrite {
    source?: string;
    destination?: string;
}
export interface Response {
    set_status_code?: HttpStatusCode | SingleLineString;
    set_done?: boolean;
    set_response_body?: string;
    allow_prefetching_uncached_content?: boolean;
    compress_content_types?: string[];
    optimize_images?: boolean;
    retry_from_hostname?: string;
}
export interface Headers {
    debug_header?: boolean;
    set_request_headers?: HttpRequestHeader;
    set_response_headers?: HttpResponseHeader;
    add_response_headers?: HttpResponseHeader;
    set_client_ip_custom_header?: GenericField;
    remove_response_headers?: string[];
    remove_origin_response_headers?: string[];
    server_timing_header?: boolean;
    set_origin_response_headers?: HttpResponseHeader;
    [k: string]: unknown;
}
export interface HttpRequestHeader {
    /**
     * This interface was referenced by `HttpRequestHeader`'s JSON-Schema definition
     * via the `patternProperty` "^[+]?[-_a-zA-Z0-9 .]+$".
     *
     * This interface was referenced by `SetVariables`'s JSON-Schema definition
     * via the `patternProperty` "^[-_a-zA-Z0-9]+$".
     *
     * This interface was referenced by `EnvironmentVariables`'s JSON-Schema definition
     * via the `patternProperty` "^[-_a-zA-Z0-9]+$".
     * This interface was referenced by `HttpRequestHeader`'s JSON-Schema definition
     * via the `patternProperty` "^(Forwarded-For|Host|Vary|Via|Warning|X-Forwarded-For|X-EC.*)$".
     */
    [k: string]: SingleLineString | null;
}
export interface Logs {
    custom_log_field_format?: string;
    log_query_string?: boolean;
    mask_client_subnet?: boolean;
    [k: string]: unknown;
}
export interface Origin {
    max_keep_alive_requests?: number;
    proxy_special_headers?: GenericField[];
    set_origin?: string;
    [k: string]: unknown;
}
export interface Url {
    follow_redirects?: boolean;
    url_rewrite?: {
        source?: string;
        destination?: string;
        syntax?: 'regexp' | 'path-to-regexp';
    }[];
    url_redirect?: {
        code?: HttpStatusCode;
        source?: string;
        destination?: string;
        syntax?: 'regexp' | 'path-to-regexp';
    };
}
export interface Client {
    quic?: boolean;
    [k: string]: unknown;
}
export interface SetVariables {
    /**
     * This interface was referenced by `HttpRequestHeader`'s JSON-Schema definition
     * via the `patternProperty` "^[+]?[-_a-zA-Z0-9 .]+$".
     *
     * This interface was referenced by `SetVariables`'s JSON-Schema definition
     * via the `patternProperty` "^[-_a-zA-Z0-9]+$".
     *
     * This interface was referenced by `EnvironmentVariables`'s JSON-Schema definition
     * via the `patternProperty` "^[-_a-zA-Z0-9]+$".
     */
    [k: string]: SingleLineString;
}
export interface EdgeFunctions {
    quickjs_bytecode_base64?: string;
}
export interface EnvironmentVariables {
    /**
     * This interface was referenced by `HttpRequestHeader`'s JSON-Schema definition
     * via the `patternProperty` "^[+]?[-_a-zA-Z0-9 .]+$".
     *
     * This interface was referenced by `SetVariables`'s JSON-Schema definition
     * via the `patternProperty` "^[-_a-zA-Z0-9]+$".
     *
     * This interface was referenced by `EnvironmentVariables`'s JSON-Schema definition
     * via the `patternProperty` "^[-_a-zA-Z0-9]+$".
     */
    [k: string]: SingleLineString;
}
export interface Rtld {
    /**
     * @minItems 1
     */
    custom_request_headers?: [string, ...string[]];
    /**
     * @minItems 1
     */
    custom_response_headers?: [string, ...string[]];
    /**
     * @minItems 1
     */
    custom_cookies?: [string, ...string[]];
}
export interface Experiment {
    id: string;
    name?: string;
    active: boolean;
    criteria?: (Boolean | Conditionals)[];
    /**
     * @minItems 2
     * @maxItems 100
     */
    variants: [Variant, Variant, ...Variant[]];
}
export interface Variant {
    id: string;
    name?: string;
    weight: number;
    features?: Features[];
}
