"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isBrowser = exports.isEdgioRunDev = exports.isProductionBuild = exports.isLocal = exports.isCloud = void 0;
const constants_1 = require("./constants");
/**
 * Used to determine if the app is running in the cloud.
 * @returns `true` when running in the cloud, `false` otherwise
 */
function isCloud() {
    return process.env[constants_1.EDGIO_ENV_VARIABLES.deploymentType] === constants_1.EDGIO_DEPLOYMENT_TYPE_AWS;
}
exports.isCloud = isCloud;
/**
 * Returns true when running locally, either in dev or production mode
 */
function isLocal() {
    return process.env[constants_1.EDGIO_ENV_VARIABLES.local] === 'true';
}
exports.isLocal = isLocal;
/**
 * Used to determine if the app is running on a production build.
 * @returns `true` when running a production build, either locally or in the cloud; `false` otherwise
 */
function isProductionBuild() {
    return (
    // Users can change the value of NODE_ENV in the cloud https://docs.edg.io/guides/basics/environments#built-in-environment-variables
    // Caveat: We NEED to access NODE_ENV through array accessor, otherwise its mapped into static value by webpack that isnt changable at runtime
    process.env['NODE_ENV'] === 'production' ||
        // To reliably detect a prod build, we set variable EDGIO_PRODUCTION_BUILD true in lambdas which users can't change
        // We can't use isCloud in those cases, as we need to use this function also in local cases
        process.env[constants_1.EDGIO_ENV_VARIABLES.productionBuild] === 'true');
}
exports.isProductionBuild = isProductionBuild;
/**
 * Used to determine if the app is running in `edgio run` development environment
 * @returns `true` when running with `edgio run`without production flag, `false` otherwise
 */
function isEdgioRunDev() {
    return !isCloud() && !isProductionBuild();
}
exports.isEdgioRunDev = isEdgioRunDev;
/**
 * Determines whether or not we are running in a browser
 * @returns `true` when running in a browser, otherwise false
 */
function isBrowser() {
    return typeof window !== 'undefined';
}
exports.isBrowser = isBrowser;
