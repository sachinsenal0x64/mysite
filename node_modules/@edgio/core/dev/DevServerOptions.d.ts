import { Configuration } from 'webpack';
/**
 * Options for `createDevServer`
 */
export default interface DevServerOptions {
    /**
     * A label to prepend to all output from the application server
     */
    label?: string;
    /**
     * A manual function to run to start the application server instead of using a command
     */
    run?: (port: number) => void;
    /**
     * The command to start the application server in development mode
     */
    command?: (port: number) => string;
    /**
     * An array of regular expressions to search for in application server output or number
     * of seconds to wait until underlying framework is ready.
     * Once all have been matched, The "Edgio ready on http://127.0.0.1:3000" line will be displayed.
     */
    ready?: RegExp[] | number;
    /**
     * A function that is called every time the application server outputs a line to stdout. Return false
     * to hide that line from the user. This can be useful in hiding lines like "Application ready on 127.0.0.1:3001"
     * to keep the user from getting confused about which URL to use when testing the app.
     */
    filterOutput?: (line: string) => boolean;
    /**
     * Optional function that returns a webpack compiler that should halt requests during rebuilds
     */
    webpackConfig?: Configuration;
    /**
     * Additional list of directories to watch for changes.
     * The router is reloaded and all rules are added again when any of these directories change.
     */
    reloadOnChangeOf?: string[];
    /**
     * Additional env variables to pass to the application server
     */
    env?: Record<string, string>;
}
