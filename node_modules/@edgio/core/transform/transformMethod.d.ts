import Request from '../runtime/Request';
/**
 * A function for `transformRequest` that alters the request method to `toMethod`.
 * The request body is set to the value of the `pref_edgio_body` query parameter.
 *
 * **Example**
 *
 * ```js
 *  import { Router } from '@edgio/core/router'
 *  import { transformMethod } from '@edgio/core/transform'
 *
 *  const cacheConfig = {
 *    edge: {
 *      maxAgeSeconds: 60 * 60 * 24,
 *      staleWhileRevalidateSeconds: 60 * 60
 *    },
 *    browser: {
 *      serviceWorkerSeconds: 60 * 60 * 24,
 *    }
 *  }
 *
 *  export default new Router()
 *    // When the request is a GET, convert it to post using Edgio Cloud Function and cache the result
 *    .get('/some-post-path', ({ cache, proxy }) => {
 *      cache(cacheConfig)
 *      proxy('origin', {
 *        transformRequest: transformMethod('post')
 *      })
 *    })
 *    // When the request is a POST, forward it to origin from the edge without using Edgio Cloud Function
 *    .post('/some-post-path', ({ cache, proxy }) => {
 *      cache(cacheConfig)
 *      proxy('origin')
 *    })
 * ```
 *
 * @param toMethod The method to set
 * @private
 */
export default function transformMethod(toMethod: string): (request: Request) => void;
