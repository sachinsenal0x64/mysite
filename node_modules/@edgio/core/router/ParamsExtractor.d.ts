import RouteCriteria, { OptionalCriteriaValue, InOperatorCriteriaValue } from './RouteCriteria';
import Request from '../runtime/Request';
import { ExactPath } from '../router/exact';
export default class ParamsExtractor {
    protected routeCriteria: RouteCriteria;
    constructor(routeCriteria: RouteCriteria);
    updateRouteCriteria(routeCriteria: RouteCriteria): void;
    /**
     * Returns the object with extracted params from request path and query matched by latest routeCriteria
     * @returns
     */
    extract(request: Request): {
        [x: string]: string | string[];
    };
    /**
     * Returns params from request path matched by route criteria path
     * @param criteriaPath
     * @param requestPath
     * @returns
     */
    static getMatchedPathParams(criteriaPath: string | RegExp | ExactPath | InOperatorCriteriaValue, requestPath: string): Record<string, string | string[]> | undefined;
    /**
     * Returns params from request query matched by route criteria query
     * @param criteriaQuery object of routeCriteria queries
     * @param requestQuery object of parsed queries
     * @returns
     */
    static getMatchedQueryParams(criteriaQuery: {
        [name: string]: OptionalCriteriaValue | InOperatorCriteriaValue;
    }, requestQuery: {
        [key: string]: string | string[] | undefined;
    }): Record<string, string> | undefined;
}
